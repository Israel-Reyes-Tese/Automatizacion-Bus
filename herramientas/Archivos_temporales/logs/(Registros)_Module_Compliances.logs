#----------------------------------- MODULE COMPLIANCE  hrMIBCompliance  ---------------------------#
Tipo de objeto: MODULE-COMPLIANCE
Nombre del objeto: hrMIBCompliance
hrMIBCompliance MODULE-COMPLIANCE
STATUS current
DESCRIPTION
"The requirements for conformance to the Host Resources MIB."
MODULE -- this module
MANDATORY-GROUPS { hrSystemGroup, hrStorageGroup,
hrDeviceGroup }
OBJECT hrSystemDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrSystemInitialLoadDevice
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrSystemInitialLoadParameters
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrStorageSize
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrFSLastFullBackupDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrFSLastPartialBackupDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
GROUP hrSWRunGroup
DESCRIPTION
"The Running Software Group. Implementation
of this group is mandatory only when the
hrSWRunPerfGroup is implemented."
OBJECT hrSWRunStatus
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
GROUP hrSWRunPerfGroup
DESCRIPTION
"The Running Software Performance Group.
Implementation of this group is at the discretion
of the implementor."
GROUP hrSWInstalledGroup
DESCRIPTION
"The Installed Software Group.
Implementation of this group is at the discretion
of the implementor."
::= { hrMIBCompliances 1 }

hrMIBCompliance MODULE-COMPLIANCE
STATUS current
DESCRIPTION
"The requirements for conformance to the Host Resources MIB."
MODULE -- this module
MANDATORY-GROUPS { hrSystemGroup, hrStorageGroup,
hrDeviceGroup }
OBJECT hrSystemDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrSystemInitialLoadDevice
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrSystemInitialLoadParameters
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrStorageSize
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrFSLastFullBackupDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrFSLastPartialBackupDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
GROUP hrSWRunGroup
DESCRIPTION
"The Running Software Group. Implementation
of this group is mandatory only when the
hrSWRunPerfGroup is implemented."
OBJECT hrSWRunStatus
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
GROUP hrSWRunPerfGroup
DESCRIPTION
"The Running Software Performance Group.
Implementation of this group is at the discretion
of the implementor."
GROUP hrSWInstalledGroup
DESCRIPTION
"The Installed Software Group.
Implementation of this group is at the discretion
of the implementor."
::= { hrMIBCompliances 1 }
hrSystemGroup OBJECT-GROUP
OBJECTS {
hrSystemUptime, hrSystemDate,
hrSystemInitialLoadDevice,
hrSystemInitialLoadParameters,
hrSystemNumUsers, hrSystemProcesses,
hrSystemMaxProcesses
}
STATUS current
DESCRIPTION
"The Host Resources System Group."
::= { hrMIBGroups 1 }

hrMIBCompliance MODULE-COMPLIANCE
STATUS current
DESCRIPTION
"The requirements for conformance to the Host Resources MIB."
MODULE -- this module
MANDATORY-GROUPS { hrSystemGroup, hrStorageGroup,
hrDeviceGroup }
OBJECT hrSystemDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrSystemInitialLoadDevice
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrSystemInitialLoadParameters
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrStorageSize
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrFSLastFullBackupDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrFSLastPartialBackupDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
GROUP hrSWRunGroup
DESCRIPTION
"The Running Software Group. Implementation
of this group is mandatory only when the
hrSWRunPerfGroup is implemented."
OBJECT hrSWRunStatus
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
GROUP hrSWRunPerfGroup
DESCRIPTION
"The Running Software Performance Group.
Implementation of this group is at the discretion
of the implementor."
GROUP hrSWInstalledGroup
DESCRIPTION
"The Installed Software Group.
Implementation of this group is at the discretion
of the implementor."
::= { hrMIBCompliances 1 }
hrSystemGroup OBJECT-GROUP
OBJECTS {
hrSystemUptime, hrSystemDate,
hrSystemInitialLoadDevice,
hrSystemInitialLoadParameters,
hrSystemNumUsers, hrSystemProcesses,
hrSystemMaxProcesses
}
STATUS current
DESCRIPTION
"The Host Resources System Group."
::= { hrMIBGroups 1 }
hrStorageGroup OBJECT-GROUP
OBJECTS {
hrMemorySize, hrStorageIndex, hrStorageType,
hrStorageDescr, hrStorageAllocationUnits,
hrStorageSize, hrStorageUsed,
hrStorageAllocationFailures
}
STATUS current
DESCRIPTION
"The Host Resources Storage Group."
::= { hrMIBGroups 2 }

hrMIBCompliance MODULE-COMPLIANCE
STATUS current
DESCRIPTION
"The requirements for conformance to the Host Resources MIB."
MODULE -- this module
MANDATORY-GROUPS { hrSystemGroup, hrStorageGroup,
hrDeviceGroup }
OBJECT hrSystemDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrSystemInitialLoadDevice
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrSystemInitialLoadParameters
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrStorageSize
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrFSLastFullBackupDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrFSLastPartialBackupDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
GROUP hrSWRunGroup
DESCRIPTION
"The Running Software Group. Implementation
of this group is mandatory only when the
hrSWRunPerfGroup is implemented."
OBJECT hrSWRunStatus
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
GROUP hrSWRunPerfGroup
DESCRIPTION
"The Running Software Performance Group.
Implementation of this group is at the discretion
of the implementor."
GROUP hrSWInstalledGroup
DESCRIPTION
"The Installed Software Group.
Implementation of this group is at the discretion
of the implementor."
::= { hrMIBCompliances 1 }
hrSystemGroup OBJECT-GROUP
OBJECTS {
hrSystemUptime, hrSystemDate,
hrSystemInitialLoadDevice,
hrSystemInitialLoadParameters,
hrSystemNumUsers, hrSystemProcesses,
hrSystemMaxProcesses
}
STATUS current
DESCRIPTION
"The Host Resources System Group."
::= { hrMIBGroups 1 }
hrStorageGroup OBJECT-GROUP
OBJECTS {
hrMemorySize, hrStorageIndex, hrStorageType,
hrStorageDescr, hrStorageAllocationUnits,
hrStorageSize, hrStorageUsed,
hrStorageAllocationFailures
}
STATUS current
DESCRIPTION
"The Host Resources Storage Group."
::= { hrMIBGroups 2 }
hrDeviceGroup OBJECT-GROUP
OBJECTS {
hrDeviceIndex, hrDeviceType, hrDeviceDescr,
hrDeviceID, hrDeviceStatus, hrDeviceErrors,
hrProcessorFrwID, hrProcessorLoad,
hrNetworkIfIndex, hrPrinterStatus,
hrPrinterDetectedErrorState,
hrDiskStorageAccess, hrDiskStorageMedia,
hrDiskStorageRemoveble, hrDiskStorageCapacity,
hrPartitionIndex, hrPartitionLabel,
hrPartitionID, hrPartitionSize,
hrPartitionFSIndex, hrFSIndex, hrFSMountPoint,
hrFSRemoteMountPoint, hrFSType, hrFSAccess,
hrFSBootable, hrFSStorageIndex,
hrFSLastFullBackupDate,
hrFSLastPartialBackupDate
}
STATUS current
DESCRIPTION
"The Host Resources Device Group."
::= { hrMIBGroups 3 }

hrMIBCompliance MODULE-COMPLIANCE
STATUS current
DESCRIPTION
"The requirements for conformance to the Host Resources MIB."
MODULE -- this module
MANDATORY-GROUPS { hrSystemGroup, hrStorageGroup,
hrDeviceGroup }
OBJECT hrSystemDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrSystemInitialLoadDevice
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrSystemInitialLoadParameters
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrStorageSize
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrFSLastFullBackupDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrFSLastPartialBackupDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
GROUP hrSWRunGroup
DESCRIPTION
"The Running Software Group. Implementation
of this group is mandatory only when the
hrSWRunPerfGroup is implemented."
OBJECT hrSWRunStatus
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
GROUP hrSWRunPerfGroup
DESCRIPTION
"The Running Software Performance Group.
Implementation of this group is at the discretion
of the implementor."
GROUP hrSWInstalledGroup
DESCRIPTION
"The Installed Software Group.
Implementation of this group is at the discretion
of the implementor."
::= { hrMIBCompliances 1 }
hrSystemGroup OBJECT-GROUP
OBJECTS {
hrSystemUptime, hrSystemDate,
hrSystemInitialLoadDevice,
hrSystemInitialLoadParameters,
hrSystemNumUsers, hrSystemProcesses,
hrSystemMaxProcesses
}
STATUS current
DESCRIPTION
"The Host Resources System Group."
::= { hrMIBGroups 1 }
hrStorageGroup OBJECT-GROUP
OBJECTS {
hrMemorySize, hrStorageIndex, hrStorageType,
hrStorageDescr, hrStorageAllocationUnits,
hrStorageSize, hrStorageUsed,
hrStorageAllocationFailures
}
STATUS current
DESCRIPTION
"The Host Resources Storage Group."
::= { hrMIBGroups 2 }
hrDeviceGroup OBJECT-GROUP
OBJECTS {
hrDeviceIndex, hrDeviceType, hrDeviceDescr,
hrDeviceID, hrDeviceStatus, hrDeviceErrors,
hrProcessorFrwID, hrProcessorLoad,
hrNetworkIfIndex, hrPrinterStatus,
hrPrinterDetectedErrorState,
hrDiskStorageAccess, hrDiskStorageMedia,
hrDiskStorageRemoveble, hrDiskStorageCapacity,
hrPartitionIndex, hrPartitionLabel,
hrPartitionID, hrPartitionSize,
hrPartitionFSIndex, hrFSIndex, hrFSMountPoint,
hrFSRemoteMountPoint, hrFSType, hrFSAccess,
hrFSBootable, hrFSStorageIndex,
hrFSLastFullBackupDate,
hrFSLastPartialBackupDate
}
STATUS current
DESCRIPTION
"The Host Resources Device Group."
::= { hrMIBGroups 3 }
hrSWRunGroup OBJECT-GROUP
OBJECTS {
hrSWOSIndex, hrSWRunIndex, hrSWRunName,
hrSWRunID, hrSWRunPath, hrSWRunParameters,
hrSWRunType, hrSWRunStatus
}
STATUS current
DESCRIPTION
"The Host Resources Running Software Group."
::= { hrMIBGroups 4 }

hrMIBCompliance MODULE-COMPLIANCE
STATUS current
DESCRIPTION
"The requirements for conformance to the Host Resources MIB."
MODULE -- this module
MANDATORY-GROUPS { hrSystemGroup, hrStorageGroup,
hrDeviceGroup }
OBJECT hrSystemDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrSystemInitialLoadDevice
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrSystemInitialLoadParameters
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrStorageSize
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrFSLastFullBackupDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrFSLastPartialBackupDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
GROUP hrSWRunGroup
DESCRIPTION
"The Running Software Group. Implementation
of this group is mandatory only when the
hrSWRunPerfGroup is implemented."
OBJECT hrSWRunStatus
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
GROUP hrSWRunPerfGroup
DESCRIPTION
"The Running Software Performance Group.
Implementation of this group is at the discretion
of the implementor."
GROUP hrSWInstalledGroup
DESCRIPTION
"The Installed Software Group.
Implementation of this group is at the discretion
of the implementor."
::= { hrMIBCompliances 1 }
hrSystemGroup OBJECT-GROUP
OBJECTS {
hrSystemUptime, hrSystemDate,
hrSystemInitialLoadDevice,
hrSystemInitialLoadParameters,
hrSystemNumUsers, hrSystemProcesses,
hrSystemMaxProcesses
}
STATUS current
DESCRIPTION
"The Host Resources System Group."
::= { hrMIBGroups 1 }
hrStorageGroup OBJECT-GROUP
OBJECTS {
hrMemorySize, hrStorageIndex, hrStorageType,
hrStorageDescr, hrStorageAllocationUnits,
hrStorageSize, hrStorageUsed,
hrStorageAllocationFailures
}
STATUS current
DESCRIPTION
"The Host Resources Storage Group."
::= { hrMIBGroups 2 }
hrDeviceGroup OBJECT-GROUP
OBJECTS {
hrDeviceIndex, hrDeviceType, hrDeviceDescr,
hrDeviceID, hrDeviceStatus, hrDeviceErrors,
hrProcessorFrwID, hrProcessorLoad,
hrNetworkIfIndex, hrPrinterStatus,
hrPrinterDetectedErrorState,
hrDiskStorageAccess, hrDiskStorageMedia,
hrDiskStorageRemoveble, hrDiskStorageCapacity,
hrPartitionIndex, hrPartitionLabel,
hrPartitionID, hrPartitionSize,
hrPartitionFSIndex, hrFSIndex, hrFSMountPoint,
hrFSRemoteMountPoint, hrFSType, hrFSAccess,
hrFSBootable, hrFSStorageIndex,
hrFSLastFullBackupDate,
hrFSLastPartialBackupDate
}
STATUS current
DESCRIPTION
"The Host Resources Device Group."
::= { hrMIBGroups 3 }
hrSWRunGroup OBJECT-GROUP
OBJECTS {
hrSWOSIndex, hrSWRunIndex, hrSWRunName,
hrSWRunID, hrSWRunPath, hrSWRunParameters,
hrSWRunType, hrSWRunStatus
}
STATUS current
DESCRIPTION
"The Host Resources Running Software Group."
::= { hrMIBGroups 4 }
hrSWRunPerfGroup OBJECT-GROUP
OBJECTS { hrSWRunPerfCPU, hrSWRunPerfMem }
STATUS current
DESCRIPTION
"The Host Resources Running Software
Performance Group."
::= { hrMIBGroups 5 }

hrMIBCompliance MODULE-COMPLIANCE
STATUS current
DESCRIPTION
"The requirements for conformance to the Host Resources MIB."
MODULE -- this module
MANDATORY-GROUPS { hrSystemGroup, hrStorageGroup,
hrDeviceGroup }
OBJECT hrSystemDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrSystemInitialLoadDevice
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrSystemInitialLoadParameters
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrStorageSize
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrFSLastFullBackupDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
OBJECT hrFSLastPartialBackupDate
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
GROUP hrSWRunGroup
DESCRIPTION
"The Running Software Group. Implementation
of this group is mandatory only when the
hrSWRunPerfGroup is implemented."
OBJECT hrSWRunStatus
MIN-ACCESS read-only
DESCRIPTION
"Write access is not required."
GROUP hrSWRunPerfGroup
DESCRIPTION
"The Running Software Performance Group.
Implementation of this group is at the discretion
of the implementor."
GROUP hrSWInstalledGroup
DESCRIPTION
"The Installed Software Group.
Implementation of this group is at the discretion
of the implementor."
::= { hrMIBCompliances 1 }
hrSystemGroup OBJECT-GROUP
OBJECTS {
hrSystemUptime, hrSystemDate,
hrSystemInitialLoadDevice,
hrSystemInitialLoadParameters,
hrSystemNumUsers, hrSystemProcesses,
hrSystemMaxProcesses
}
STATUS current
DESCRIPTION
"The Host Resources System Group."
::= { hrMIBGroups 1 }
hrStorageGroup OBJECT-GROUP
OBJECTS {
hrMemorySize, hrStorageIndex, hrStorageType,
hrStorageDescr, hrStorageAllocationUnits,
hrStorageSize, hrStorageUsed,
hrStorageAllocationFailures
}
STATUS current
DESCRIPTION
"The Host Resources Storage Group."
::= { hrMIBGroups 2 }
hrDeviceGroup OBJECT-GROUP
OBJECTS {
hrDeviceIndex, hrDeviceType, hrDeviceDescr,
hrDeviceID, hrDeviceStatus, hrDeviceErrors,
hrProcessorFrwID, hrProcessorLoad,
hrNetworkIfIndex, hrPrinterStatus,
hrPrinterDetectedErrorState,
hrDiskStorageAccess, hrDiskStorageMedia,
hrDiskStorageRemoveble, hrDiskStorageCapacity,
hrPartitionIndex, hrPartitionLabel,
hrPartitionID, hrPartitionSize,
hrPartitionFSIndex, hrFSIndex, hrFSMountPoint,
hrFSRemoteMountPoint, hrFSType, hrFSAccess,
hrFSBootable, hrFSStorageIndex,
hrFSLastFullBackupDate,
hrFSLastPartialBackupDate
}
STATUS current
DESCRIPTION
"The Host Resources Device Group."
::= { hrMIBGroups 3 }
hrSWRunGroup OBJECT-GROUP
OBJECTS {
hrSWOSIndex, hrSWRunIndex, hrSWRunName,
hrSWRunID, hrSWRunPath, hrSWRunParameters,
hrSWRunType, hrSWRunStatus
}
STATUS current
DESCRIPTION
"The Host Resources Running Software Group."
::= { hrMIBGroups 4 }
hrSWRunPerfGroup OBJECT-GROUP
OBJECTS { hrSWRunPerfCPU, hrSWRunPerfMem }
STATUS current
DESCRIPTION
"The Host Resources Running Software
Performance Group."
::= { hrMIBGroups 5 }
hrSWInstalledGroup OBJECT-GROUP
OBJECTS {
hrSWInstalledLastChange,
hrSWInstalledLastUpdateTime,
hrSWInstalledIndex, hrSWInstalledName,
hrSWInstalledID, hrSWInstalledType,
hrSWInstalledDate
}
STATUS current
DESCRIPTION
"The Host Resources Installed Software Group."
::= { hrMIBGroups 6 }

#----------------------------------- MODULE COMPLIANCE  ifCompliance3  ---------------------------#
Tipo de objeto: MODULE-COMPLIANCE
Nombre del objeto: ifCompliance3
ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }
ifCounterDiscontinuityGroup  OBJECT-GROUP
OBJECTS { ifCounterDiscontinuityTime }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
interface counter discontinuities."
::= { ifGroups 13 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }
ifCounterDiscontinuityGroup  OBJECT-GROUP
OBJECTS { ifCounterDiscontinuityTime }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
interface counter discontinuities."
::= { ifGroups 13 }
linkUpDownNotificationsGroup  NOTIFICATION-GROUP
NOTIFICATIONS { linkUp, linkDown }
STATUS  current
DESCRIPTION
"The notifications which indicate specific changes in the
value of ifOperStatus."
::= { ifGroups 14 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }
ifCounterDiscontinuityGroup  OBJECT-GROUP
OBJECTS { ifCounterDiscontinuityTime }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
interface counter discontinuities."
::= { ifGroups 13 }
linkUpDownNotificationsGroup  NOTIFICATION-GROUP
NOTIFICATIONS { linkUp, linkDown }
STATUS  current
DESCRIPTION
"The notifications which indicate specific changes in the
value of ifOperStatus."
::= { ifGroups 14 }
ifTestTable   OBJECT-TYPE
SYNTAX      SEQUENCE OF IfTestEntry
MAX-ACCESS  not-accessible
STATUS      deprecated
DESCRIPTION
"This table contains one entry per interface.  It defines
objects which allow a network manager to instruct an agent
to test an interface for various faults.  Tests for an
interface are defined in the media-specific MIB for that
interface.  After invoking a test, the object ifTestResult
can be read to determine the outcome.  If an agent can not
perform the test, ifTestResult is set to so indicate.  The
object ifTestCode can be used to provide further test-
specific or interface-specific (or even enterprise-specific)
information concerning the outcome of the test.  Only one
test can be in progress on each interface at any one time.
If one test is in progress when another test is invoked, the
second test is rejected.  Some agents may reject a test when
a prior test is active on another interface.
Before starting a test, a manager-station must first obtain
'ownership' of the entry in the ifTestTable for the
interface to be tested.  This is accomplished with the
ifTestId and ifTestStatus objects as follows:
try_again:
get (ifTestId, ifTestStatus)
while (ifTestStatus != notInUse)
/*
* Loop while a test is running or some other
* manager is configuring a test.
*/
short delay
get (ifTestId, ifTestStatus)
}
/*
* Is not being used right now -- let's compete
* to see who gets it.
*/
lock_value = ifTestId
if ( set(ifTestId = lock_value, ifTestStatus = inUse,
ifTestOwner = 'my-IP-address') == FAILURE)
/*
* Another manager got the ifTestEntry -- go
* try again
*/
goto try_again;
/*
* I have the lock
*/
set up any test parameters.
/*
* This starts the test
*/
set(ifTestType = test_to_run);
wait for test completion by polling ifTestResult
when test completes, agent sets ifTestResult
agent also sets ifTestStatus = 'notInUse'
retrieve any additional test results, and ifTestId
if (ifTestId == lock_value+1) results are valid
A manager station first retrieves the value of the
appropriate ifTestId and ifTestStatus objects, periodically
repeating the retrieval if necessary, until the value of
ifTestStatus is 'notInUse'.  The manager station then tries
to set the same ifTestId object to the value it just
retrieved, the same ifTestStatus object to 'inUse', and the
corresponding ifTestOwner object to a value indicating
itself.  If the set operation succeeds then the manager has
obtained ownership of the ifTestEntry, and the value of the
ifTestId object is incremented by the agent (per the
semantics of TestAndIncr).  Failure of the set operation
indicates that some other manager has obtained ownership of
the ifTestEntry.
Once ownership is obtained, any test parameters can be
setup, and then the test is initiated by setting ifTestType.
On completion of the test, the agent sets ifTestStatus to
'notInUse'.  Once this occurs, the manager can retrieve the
results.  In the (rare) event that the invocation of tests
by two network managers were to overlap, then there would be
a possibility that the first test's results might be
overwritten by the second test's results prior to the first
results being read.  This unlikely circumstance can be
detected by a network manager retrieving ifTestId at the
same time as retrieving the test results, and ensuring that
the results are for the desired request.
If ifTestType is not set within an abnormally long period of
time after ownership is obtained, the agent should time-out
the manager, and reset the value of the ifTestStatus object
back to 'notInUse'.  It is suggested that this time-out
period be 5 minutes.
In general, a management station must not retransmit a
request to invoke a test for which it does not receive a
response; instead, it properly inspects an agent's MIB to
determine if the invocation was successful.  Only if the
invocation was unsuccessful, is the invocation request
retransmitted.
Some tests may require the interface to be taken off-line in
order to execute them, or may even require the agent to
reboot after completion of the test.  In these
circumstances, communication with the management station
invoking the test may be lost until after completion of the
test.  An agent is not required to support such tests.
However, if such tests are supported, then the agent should
make every effort to transmit a response to the request
which invoked the test prior to losing communication.  When
the agent is restored to normal service, the results of the
test are properly made available in the appropriate objects.
Note that this requires that the ifIndex value assigned to
an interface must be unchanged even if the test causes a
reboot.  An agent must reject any test for which it cannot,
perhaps due to resource constraints, make available at least
the minimum amount of information after that test
completes."
::= { ifMIBObjects 3 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }
ifCounterDiscontinuityGroup  OBJECT-GROUP
OBJECTS { ifCounterDiscontinuityTime }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
interface counter discontinuities."
::= { ifGroups 13 }
linkUpDownNotificationsGroup  NOTIFICATION-GROUP
NOTIFICATIONS { linkUp, linkDown }
STATUS  current
DESCRIPTION
"The notifications which indicate specific changes in the
value of ifOperStatus."
::= { ifGroups 14 }
ifTestTable   OBJECT-TYPE
SYNTAX      SEQUENCE OF IfTestEntry
MAX-ACCESS  not-accessible
STATUS      deprecated
DESCRIPTION
"This table contains one entry per interface.  It defines
objects which allow a network manager to instruct an agent
to test an interface for various faults.  Tests for an
interface are defined in the media-specific MIB for that
interface.  After invoking a test, the object ifTestResult
can be read to determine the outcome.  If an agent can not
perform the test, ifTestResult is set to so indicate.  The
object ifTestCode can be used to provide further test-
specific or interface-specific (or even enterprise-specific)
information concerning the outcome of the test.  Only one
test can be in progress on each interface at any one time.
If one test is in progress when another test is invoked, the
second test is rejected.  Some agents may reject a test when
a prior test is active on another interface.
Before starting a test, a manager-station must first obtain
'ownership' of the entry in the ifTestTable for the
interface to be tested.  This is accomplished with the
ifTestId and ifTestStatus objects as follows:
try_again:
get (ifTestId, ifTestStatus)
while (ifTestStatus != notInUse)
/*
* Loop while a test is running or some other
* manager is configuring a test.
*/
short delay
get (ifTestId, ifTestStatus)
}
/*
* Is not being used right now -- let's compete
* to see who gets it.
*/
lock_value = ifTestId
if ( set(ifTestId = lock_value, ifTestStatus = inUse,
ifTestOwner = 'my-IP-address') == FAILURE)
/*
* Another manager got the ifTestEntry -- go
* try again
*/
goto try_again;
/*
* I have the lock
*/
set up any test parameters.
/*
* This starts the test
*/
set(ifTestType = test_to_run);
wait for test completion by polling ifTestResult
when test completes, agent sets ifTestResult
agent also sets ifTestStatus = 'notInUse'
retrieve any additional test results, and ifTestId
if (ifTestId == lock_value+1) results are valid
A manager station first retrieves the value of the
appropriate ifTestId and ifTestStatus objects, periodically
repeating the retrieval if necessary, until the value of
ifTestStatus is 'notInUse'.  The manager station then tries
to set the same ifTestId object to the value it just
retrieved, the same ifTestStatus object to 'inUse', and the
corresponding ifTestOwner object to a value indicating
itself.  If the set operation succeeds then the manager has
obtained ownership of the ifTestEntry, and the value of the
ifTestId object is incremented by the agent (per the
semantics of TestAndIncr).  Failure of the set operation
indicates that some other manager has obtained ownership of
the ifTestEntry.
Once ownership is obtained, any test parameters can be
setup, and then the test is initiated by setting ifTestType.
On completion of the test, the agent sets ifTestStatus to
'notInUse'.  Once this occurs, the manager can retrieve the
results.  In the (rare) event that the invocation of tests
by two network managers were to overlap, then there would be
a possibility that the first test's results might be
overwritten by the second test's results prior to the first
results being read.  This unlikely circumstance can be
detected by a network manager retrieving ifTestId at the
same time as retrieving the test results, and ensuring that
the results are for the desired request.
If ifTestType is not set within an abnormally long period of
time after ownership is obtained, the agent should time-out
the manager, and reset the value of the ifTestStatus object
back to 'notInUse'.  It is suggested that this time-out
period be 5 minutes.
In general, a management station must not retransmit a
request to invoke a test for which it does not receive a
response; instead, it properly inspects an agent's MIB to
determine if the invocation was successful.  Only if the
invocation was unsuccessful, is the invocation request
retransmitted.
Some tests may require the interface to be taken off-line in
order to execute them, or may even require the agent to
reboot after completion of the test.  In these
circumstances, communication with the management station
invoking the test may be lost until after completion of the
test.  An agent is not required to support such tests.
However, if such tests are supported, then the agent should
make every effort to transmit a response to the request
which invoked the test prior to losing communication.  When
the agent is restored to normal service, the results of the
test are properly made available in the appropriate objects.
Note that this requires that the ifIndex value assigned to
an interface must be unchanged even if the test causes a
reboot.  An agent must reject any test for which it cannot,
perhaps due to resource constraints, make available at least
the minimum amount of information after that test
completes."
::= { ifMIBObjects 3 }
ifTestEntry OBJECT-TYPE
SYNTAX       IfTestEntry
MAX-ACCESS   not-accessible
STATUS       deprecated
DESCRIPTION
"An entry containing objects for invoking tests on an
interface."
AUGMENTS  { ifEntry }
::= { ifTestTable 1 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }
ifCounterDiscontinuityGroup  OBJECT-GROUP
OBJECTS { ifCounterDiscontinuityTime }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
interface counter discontinuities."
::= { ifGroups 13 }
linkUpDownNotificationsGroup  NOTIFICATION-GROUP
NOTIFICATIONS { linkUp, linkDown }
STATUS  current
DESCRIPTION
"The notifications which indicate specific changes in the
value of ifOperStatus."
::= { ifGroups 14 }
ifTestTable   OBJECT-TYPE
SYNTAX      SEQUENCE OF IfTestEntry
MAX-ACCESS  not-accessible
STATUS      deprecated
DESCRIPTION
"This table contains one entry per interface.  It defines
objects which allow a network manager to instruct an agent
to test an interface for various faults.  Tests for an
interface are defined in the media-specific MIB for that
interface.  After invoking a test, the object ifTestResult
can be read to determine the outcome.  If an agent can not
perform the test, ifTestResult is set to so indicate.  The
object ifTestCode can be used to provide further test-
specific or interface-specific (or even enterprise-specific)
information concerning the outcome of the test.  Only one
test can be in progress on each interface at any one time.
If one test is in progress when another test is invoked, the
second test is rejected.  Some agents may reject a test when
a prior test is active on another interface.
Before starting a test, a manager-station must first obtain
'ownership' of the entry in the ifTestTable for the
interface to be tested.  This is accomplished with the
ifTestId and ifTestStatus objects as follows:
try_again:
get (ifTestId, ifTestStatus)
while (ifTestStatus != notInUse)
/*
* Loop while a test is running or some other
* manager is configuring a test.
*/
short delay
get (ifTestId, ifTestStatus)
}
/*
* Is not being used right now -- let's compete
* to see who gets it.
*/
lock_value = ifTestId
if ( set(ifTestId = lock_value, ifTestStatus = inUse,
ifTestOwner = 'my-IP-address') == FAILURE)
/*
* Another manager got the ifTestEntry -- go
* try again
*/
goto try_again;
/*
* I have the lock
*/
set up any test parameters.
/*
* This starts the test
*/
set(ifTestType = test_to_run);
wait for test completion by polling ifTestResult
when test completes, agent sets ifTestResult
agent also sets ifTestStatus = 'notInUse'
retrieve any additional test results, and ifTestId
if (ifTestId == lock_value+1) results are valid
A manager station first retrieves the value of the
appropriate ifTestId and ifTestStatus objects, periodically
repeating the retrieval if necessary, until the value of
ifTestStatus is 'notInUse'.  The manager station then tries
to set the same ifTestId object to the value it just
retrieved, the same ifTestStatus object to 'inUse', and the
corresponding ifTestOwner object to a value indicating
itself.  If the set operation succeeds then the manager has
obtained ownership of the ifTestEntry, and the value of the
ifTestId object is incremented by the agent (per the
semantics of TestAndIncr).  Failure of the set operation
indicates that some other manager has obtained ownership of
the ifTestEntry.
Once ownership is obtained, any test parameters can be
setup, and then the test is initiated by setting ifTestType.
On completion of the test, the agent sets ifTestStatus to
'notInUse'.  Once this occurs, the manager can retrieve the
results.  In the (rare) event that the invocation of tests
by two network managers were to overlap, then there would be
a possibility that the first test's results might be
overwritten by the second test's results prior to the first
results being read.  This unlikely circumstance can be
detected by a network manager retrieving ifTestId at the
same time as retrieving the test results, and ensuring that
the results are for the desired request.
If ifTestType is not set within an abnormally long period of
time after ownership is obtained, the agent should time-out
the manager, and reset the value of the ifTestStatus object
back to 'notInUse'.  It is suggested that this time-out
period be 5 minutes.
In general, a management station must not retransmit a
request to invoke a test for which it does not receive a
response; instead, it properly inspects an agent's MIB to
determine if the invocation was successful.  Only if the
invocation was unsuccessful, is the invocation request
retransmitted.
Some tests may require the interface to be taken off-line in
order to execute them, or may even require the agent to
reboot after completion of the test.  In these
circumstances, communication with the management station
invoking the test may be lost until after completion of the
test.  An agent is not required to support such tests.
However, if such tests are supported, then the agent should
make every effort to transmit a response to the request
which invoked the test prior to losing communication.  When
the agent is restored to normal service, the results of the
test are properly made available in the appropriate objects.
Note that this requires that the ifIndex value assigned to
an interface must be unchanged even if the test causes a
reboot.  An agent must reject any test for which it cannot,
perhaps due to resource constraints, make available at least
the minimum amount of information after that test
completes."
::= { ifMIBObjects 3 }
ifTestEntry OBJECT-TYPE
SYNTAX       IfTestEntry
MAX-ACCESS   not-accessible
STATUS       deprecated
DESCRIPTION
"An entry containing objects for invoking tests on an
interface."
AUGMENTS  { ifEntry }
::= { ifTestTable 1 }
IfTestEntry ::=

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }
ifCounterDiscontinuityGroup  OBJECT-GROUP
OBJECTS { ifCounterDiscontinuityTime }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
interface counter discontinuities."
::= { ifGroups 13 }
linkUpDownNotificationsGroup  NOTIFICATION-GROUP
NOTIFICATIONS { linkUp, linkDown }
STATUS  current
DESCRIPTION
"The notifications which indicate specific changes in the
value of ifOperStatus."
::= { ifGroups 14 }
ifTestTable   OBJECT-TYPE
SYNTAX      SEQUENCE OF IfTestEntry
MAX-ACCESS  not-accessible
STATUS      deprecated
DESCRIPTION
"This table contains one entry per interface.  It defines
objects which allow a network manager to instruct an agent
to test an interface for various faults.  Tests for an
interface are defined in the media-specific MIB for that
interface.  After invoking a test, the object ifTestResult
can be read to determine the outcome.  If an agent can not
perform the test, ifTestResult is set to so indicate.  The
object ifTestCode can be used to provide further test-
specific or interface-specific (or even enterprise-specific)
information concerning the outcome of the test.  Only one
test can be in progress on each interface at any one time.
If one test is in progress when another test is invoked, the
second test is rejected.  Some agents may reject a test when
a prior test is active on another interface.
Before starting a test, a manager-station must first obtain
'ownership' of the entry in the ifTestTable for the
interface to be tested.  This is accomplished with the
ifTestId and ifTestStatus objects as follows:
try_again:
get (ifTestId, ifTestStatus)
while (ifTestStatus != notInUse)
/*
* Loop while a test is running or some other
* manager is configuring a test.
*/
short delay
get (ifTestId, ifTestStatus)
}
/*
* Is not being used right now -- let's compete
* to see who gets it.
*/
lock_value = ifTestId
if ( set(ifTestId = lock_value, ifTestStatus = inUse,
ifTestOwner = 'my-IP-address') == FAILURE)
/*
* Another manager got the ifTestEntry -- go
* try again
*/
goto try_again;
/*
* I have the lock
*/
set up any test parameters.
/*
* This starts the test
*/
set(ifTestType = test_to_run);
wait for test completion by polling ifTestResult
when test completes, agent sets ifTestResult
agent also sets ifTestStatus = 'notInUse'
retrieve any additional test results, and ifTestId
if (ifTestId == lock_value+1) results are valid
A manager station first retrieves the value of the
appropriate ifTestId and ifTestStatus objects, periodically
repeating the retrieval if necessary, until the value of
ifTestStatus is 'notInUse'.  The manager station then tries
to set the same ifTestId object to the value it just
retrieved, the same ifTestStatus object to 'inUse', and the
corresponding ifTestOwner object to a value indicating
itself.  If the set operation succeeds then the manager has
obtained ownership of the ifTestEntry, and the value of the
ifTestId object is incremented by the agent (per the
semantics of TestAndIncr).  Failure of the set operation
indicates that some other manager has obtained ownership of
the ifTestEntry.
Once ownership is obtained, any test parameters can be
setup, and then the test is initiated by setting ifTestType.
On completion of the test, the agent sets ifTestStatus to
'notInUse'.  Once this occurs, the manager can retrieve the
results.  In the (rare) event that the invocation of tests
by two network managers were to overlap, then there would be
a possibility that the first test's results might be
overwritten by the second test's results prior to the first
results being read.  This unlikely circumstance can be
detected by a network manager retrieving ifTestId at the
same time as retrieving the test results, and ensuring that
the results are for the desired request.
If ifTestType is not set within an abnormally long period of
time after ownership is obtained, the agent should time-out
the manager, and reset the value of the ifTestStatus object
back to 'notInUse'.  It is suggested that this time-out
period be 5 minutes.
In general, a management station must not retransmit a
request to invoke a test for which it does not receive a
response; instead, it properly inspects an agent's MIB to
determine if the invocation was successful.  Only if the
invocation was unsuccessful, is the invocation request
retransmitted.
Some tests may require the interface to be taken off-line in
order to execute them, or may even require the agent to
reboot after completion of the test.  In these
circumstances, communication with the management station
invoking the test may be lost until after completion of the
test.  An agent is not required to support such tests.
However, if such tests are supported, then the agent should
make every effort to transmit a response to the request
which invoked the test prior to losing communication.  When
the agent is restored to normal service, the results of the
test are properly made available in the appropriate objects.
Note that this requires that the ifIndex value assigned to
an interface must be unchanged even if the test causes a
reboot.  An agent must reject any test for which it cannot,
perhaps due to resource constraints, make available at least
the minimum amount of information after that test
completes."
::= { ifMIBObjects 3 }
ifTestEntry OBJECT-TYPE
SYNTAX       IfTestEntry
MAX-ACCESS   not-accessible
STATUS       deprecated
DESCRIPTION
"An entry containing objects for invoking tests on an
interface."
AUGMENTS  { ifEntry }
::= { ifTestTable 1 }
IfTestEntry ::=
SEQUENCE {
ifTestId           TestAndIncr,
ifTestStatus       INTEGER,
ifTestType         AutonomousType,
ifTestResult       INTEGER,
ifTestCode         OBJECT IDENTIFIER,
ifTestOwner        OwnerString
}
ifTestId         OBJECT-TYPE
SYNTAX       TestAndIncr
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object identifies the current invocation of the
interface's test."
::= { ifTestEntry 1 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }
ifCounterDiscontinuityGroup  OBJECT-GROUP
OBJECTS { ifCounterDiscontinuityTime }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
interface counter discontinuities."
::= { ifGroups 13 }
linkUpDownNotificationsGroup  NOTIFICATION-GROUP
NOTIFICATIONS { linkUp, linkDown }
STATUS  current
DESCRIPTION
"The notifications which indicate specific changes in the
value of ifOperStatus."
::= { ifGroups 14 }
ifTestTable   OBJECT-TYPE
SYNTAX      SEQUENCE OF IfTestEntry
MAX-ACCESS  not-accessible
STATUS      deprecated
DESCRIPTION
"This table contains one entry per interface.  It defines
objects which allow a network manager to instruct an agent
to test an interface for various faults.  Tests for an
interface are defined in the media-specific MIB for that
interface.  After invoking a test, the object ifTestResult
can be read to determine the outcome.  If an agent can not
perform the test, ifTestResult is set to so indicate.  The
object ifTestCode can be used to provide further test-
specific or interface-specific (or even enterprise-specific)
information concerning the outcome of the test.  Only one
test can be in progress on each interface at any one time.
If one test is in progress when another test is invoked, the
second test is rejected.  Some agents may reject a test when
a prior test is active on another interface.
Before starting a test, a manager-station must first obtain
'ownership' of the entry in the ifTestTable for the
interface to be tested.  This is accomplished with the
ifTestId and ifTestStatus objects as follows:
try_again:
get (ifTestId, ifTestStatus)
while (ifTestStatus != notInUse)
/*
* Loop while a test is running or some other
* manager is configuring a test.
*/
short delay
get (ifTestId, ifTestStatus)
}
/*
* Is not being used right now -- let's compete
* to see who gets it.
*/
lock_value = ifTestId
if ( set(ifTestId = lock_value, ifTestStatus = inUse,
ifTestOwner = 'my-IP-address') == FAILURE)
/*
* Another manager got the ifTestEntry -- go
* try again
*/
goto try_again;
/*
* I have the lock
*/
set up any test parameters.
/*
* This starts the test
*/
set(ifTestType = test_to_run);
wait for test completion by polling ifTestResult
when test completes, agent sets ifTestResult
agent also sets ifTestStatus = 'notInUse'
retrieve any additional test results, and ifTestId
if (ifTestId == lock_value+1) results are valid
A manager station first retrieves the value of the
appropriate ifTestId and ifTestStatus objects, periodically
repeating the retrieval if necessary, until the value of
ifTestStatus is 'notInUse'.  The manager station then tries
to set the same ifTestId object to the value it just
retrieved, the same ifTestStatus object to 'inUse', and the
corresponding ifTestOwner object to a value indicating
itself.  If the set operation succeeds then the manager has
obtained ownership of the ifTestEntry, and the value of the
ifTestId object is incremented by the agent (per the
semantics of TestAndIncr).  Failure of the set operation
indicates that some other manager has obtained ownership of
the ifTestEntry.
Once ownership is obtained, any test parameters can be
setup, and then the test is initiated by setting ifTestType.
On completion of the test, the agent sets ifTestStatus to
'notInUse'.  Once this occurs, the manager can retrieve the
results.  In the (rare) event that the invocation of tests
by two network managers were to overlap, then there would be
a possibility that the first test's results might be
overwritten by the second test's results prior to the first
results being read.  This unlikely circumstance can be
detected by a network manager retrieving ifTestId at the
same time as retrieving the test results, and ensuring that
the results are for the desired request.
If ifTestType is not set within an abnormally long period of
time after ownership is obtained, the agent should time-out
the manager, and reset the value of the ifTestStatus object
back to 'notInUse'.  It is suggested that this time-out
period be 5 minutes.
In general, a management station must not retransmit a
request to invoke a test for which it does not receive a
response; instead, it properly inspects an agent's MIB to
determine if the invocation was successful.  Only if the
invocation was unsuccessful, is the invocation request
retransmitted.
Some tests may require the interface to be taken off-line in
order to execute them, or may even require the agent to
reboot after completion of the test.  In these
circumstances, communication with the management station
invoking the test may be lost until after completion of the
test.  An agent is not required to support such tests.
However, if such tests are supported, then the agent should
make every effort to transmit a response to the request
which invoked the test prior to losing communication.  When
the agent is restored to normal service, the results of the
test are properly made available in the appropriate objects.
Note that this requires that the ifIndex value assigned to
an interface must be unchanged even if the test causes a
reboot.  An agent must reject any test for which it cannot,
perhaps due to resource constraints, make available at least
the minimum amount of information after that test
completes."
::= { ifMIBObjects 3 }
ifTestEntry OBJECT-TYPE
SYNTAX       IfTestEntry
MAX-ACCESS   not-accessible
STATUS       deprecated
DESCRIPTION
"An entry containing objects for invoking tests on an
interface."
AUGMENTS  { ifEntry }
::= { ifTestTable 1 }
IfTestEntry ::=
SEQUENCE {
ifTestId           TestAndIncr,
ifTestStatus       INTEGER,
ifTestType         AutonomousType,
ifTestResult       INTEGER,
ifTestCode         OBJECT IDENTIFIER,
ifTestOwner        OwnerString
}
ifTestId         OBJECT-TYPE
SYNTAX       TestAndIncr
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object identifies the current invocation of the
interface's test."
::= { ifTestEntry 1 }
ifTestStatus     OBJECT-TYPE
SYNTAX       INTEGER { notInUse(1), inUse(2) }
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object indicates whether or not some manager currently
has the necessary 'ownership' required to invoke a test on
this interface.  A write to this object is only successful
when it changes its value from 'notInUse(1)' to 'inUse(2)'.
After completion of a test, the agent resets the value back
to 'notInUse(1)'."
::= { ifTestEntry 2 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }
ifCounterDiscontinuityGroup  OBJECT-GROUP
OBJECTS { ifCounterDiscontinuityTime }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
interface counter discontinuities."
::= { ifGroups 13 }
linkUpDownNotificationsGroup  NOTIFICATION-GROUP
NOTIFICATIONS { linkUp, linkDown }
STATUS  current
DESCRIPTION
"The notifications which indicate specific changes in the
value of ifOperStatus."
::= { ifGroups 14 }
ifTestTable   OBJECT-TYPE
SYNTAX      SEQUENCE OF IfTestEntry
MAX-ACCESS  not-accessible
STATUS      deprecated
DESCRIPTION
"This table contains one entry per interface.  It defines
objects which allow a network manager to instruct an agent
to test an interface for various faults.  Tests for an
interface are defined in the media-specific MIB for that
interface.  After invoking a test, the object ifTestResult
can be read to determine the outcome.  If an agent can not
perform the test, ifTestResult is set to so indicate.  The
object ifTestCode can be used to provide further test-
specific or interface-specific (or even enterprise-specific)
information concerning the outcome of the test.  Only one
test can be in progress on each interface at any one time.
If one test is in progress when another test is invoked, the
second test is rejected.  Some agents may reject a test when
a prior test is active on another interface.
Before starting a test, a manager-station must first obtain
'ownership' of the entry in the ifTestTable for the
interface to be tested.  This is accomplished with the
ifTestId and ifTestStatus objects as follows:
try_again:
get (ifTestId, ifTestStatus)
while (ifTestStatus != notInUse)
/*
* Loop while a test is running or some other
* manager is configuring a test.
*/
short delay
get (ifTestId, ifTestStatus)
}
/*
* Is not being used right now -- let's compete
* to see who gets it.
*/
lock_value = ifTestId
if ( set(ifTestId = lock_value, ifTestStatus = inUse,
ifTestOwner = 'my-IP-address') == FAILURE)
/*
* Another manager got the ifTestEntry -- go
* try again
*/
goto try_again;
/*
* I have the lock
*/
set up any test parameters.
/*
* This starts the test
*/
set(ifTestType = test_to_run);
wait for test completion by polling ifTestResult
when test completes, agent sets ifTestResult
agent also sets ifTestStatus = 'notInUse'
retrieve any additional test results, and ifTestId
if (ifTestId == lock_value+1) results are valid
A manager station first retrieves the value of the
appropriate ifTestId and ifTestStatus objects, periodically
repeating the retrieval if necessary, until the value of
ifTestStatus is 'notInUse'.  The manager station then tries
to set the same ifTestId object to the value it just
retrieved, the same ifTestStatus object to 'inUse', and the
corresponding ifTestOwner object to a value indicating
itself.  If the set operation succeeds then the manager has
obtained ownership of the ifTestEntry, and the value of the
ifTestId object is incremented by the agent (per the
semantics of TestAndIncr).  Failure of the set operation
indicates that some other manager has obtained ownership of
the ifTestEntry.
Once ownership is obtained, any test parameters can be
setup, and then the test is initiated by setting ifTestType.
On completion of the test, the agent sets ifTestStatus to
'notInUse'.  Once this occurs, the manager can retrieve the
results.  In the (rare) event that the invocation of tests
by two network managers were to overlap, then there would be
a possibility that the first test's results might be
overwritten by the second test's results prior to the first
results being read.  This unlikely circumstance can be
detected by a network manager retrieving ifTestId at the
same time as retrieving the test results, and ensuring that
the results are for the desired request.
If ifTestType is not set within an abnormally long period of
time after ownership is obtained, the agent should time-out
the manager, and reset the value of the ifTestStatus object
back to 'notInUse'.  It is suggested that this time-out
period be 5 minutes.
In general, a management station must not retransmit a
request to invoke a test for which it does not receive a
response; instead, it properly inspects an agent's MIB to
determine if the invocation was successful.  Only if the
invocation was unsuccessful, is the invocation request
retransmitted.
Some tests may require the interface to be taken off-line in
order to execute them, or may even require the agent to
reboot after completion of the test.  In these
circumstances, communication with the management station
invoking the test may be lost until after completion of the
test.  An agent is not required to support such tests.
However, if such tests are supported, then the agent should
make every effort to transmit a response to the request
which invoked the test prior to losing communication.  When
the agent is restored to normal service, the results of the
test are properly made available in the appropriate objects.
Note that this requires that the ifIndex value assigned to
an interface must be unchanged even if the test causes a
reboot.  An agent must reject any test for which it cannot,
perhaps due to resource constraints, make available at least
the minimum amount of information after that test
completes."
::= { ifMIBObjects 3 }
ifTestEntry OBJECT-TYPE
SYNTAX       IfTestEntry
MAX-ACCESS   not-accessible
STATUS       deprecated
DESCRIPTION
"An entry containing objects for invoking tests on an
interface."
AUGMENTS  { ifEntry }
::= { ifTestTable 1 }
IfTestEntry ::=
SEQUENCE {
ifTestId           TestAndIncr,
ifTestStatus       INTEGER,
ifTestType         AutonomousType,
ifTestResult       INTEGER,
ifTestCode         OBJECT IDENTIFIER,
ifTestOwner        OwnerString
}
ifTestId         OBJECT-TYPE
SYNTAX       TestAndIncr
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object identifies the current invocation of the
interface's test."
::= { ifTestEntry 1 }
ifTestStatus     OBJECT-TYPE
SYNTAX       INTEGER { notInUse(1), inUse(2) }
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object indicates whether or not some manager currently
has the necessary 'ownership' required to invoke a test on
this interface.  A write to this object is only successful
when it changes its value from 'notInUse(1)' to 'inUse(2)'.
After completion of a test, the agent resets the value back
to 'notInUse(1)'."
::= { ifTestEntry 2 }
ifTestType       OBJECT-TYPE
SYNTAX       AutonomousType
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"A control variable used to start and stop operator-
initiated interface tests.  Most OBJECT IDENTIFIER values
assigned to tests are defined elsewhere, in association with
specific types of interface.  However, this document assigns
a value for a full-duplex loopback test, and defines the
special meanings of the subject identifier:
noTest  OBJECT IDENTIFIER ::= { 0 0 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }
ifCounterDiscontinuityGroup  OBJECT-GROUP
OBJECTS { ifCounterDiscontinuityTime }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
interface counter discontinuities."
::= { ifGroups 13 }
linkUpDownNotificationsGroup  NOTIFICATION-GROUP
NOTIFICATIONS { linkUp, linkDown }
STATUS  current
DESCRIPTION
"The notifications which indicate specific changes in the
value of ifOperStatus."
::= { ifGroups 14 }
ifTestTable   OBJECT-TYPE
SYNTAX      SEQUENCE OF IfTestEntry
MAX-ACCESS  not-accessible
STATUS      deprecated
DESCRIPTION
"This table contains one entry per interface.  It defines
objects which allow a network manager to instruct an agent
to test an interface for various faults.  Tests for an
interface are defined in the media-specific MIB for that
interface.  After invoking a test, the object ifTestResult
can be read to determine the outcome.  If an agent can not
perform the test, ifTestResult is set to so indicate.  The
object ifTestCode can be used to provide further test-
specific or interface-specific (or even enterprise-specific)
information concerning the outcome of the test.  Only one
test can be in progress on each interface at any one time.
If one test is in progress when another test is invoked, the
second test is rejected.  Some agents may reject a test when
a prior test is active on another interface.
Before starting a test, a manager-station must first obtain
'ownership' of the entry in the ifTestTable for the
interface to be tested.  This is accomplished with the
ifTestId and ifTestStatus objects as follows:
try_again:
get (ifTestId, ifTestStatus)
while (ifTestStatus != notInUse)
/*
* Loop while a test is running or some other
* manager is configuring a test.
*/
short delay
get (ifTestId, ifTestStatus)
}
/*
* Is not being used right now -- let's compete
* to see who gets it.
*/
lock_value = ifTestId
if ( set(ifTestId = lock_value, ifTestStatus = inUse,
ifTestOwner = 'my-IP-address') == FAILURE)
/*
* Another manager got the ifTestEntry -- go
* try again
*/
goto try_again;
/*
* I have the lock
*/
set up any test parameters.
/*
* This starts the test
*/
set(ifTestType = test_to_run);
wait for test completion by polling ifTestResult
when test completes, agent sets ifTestResult
agent also sets ifTestStatus = 'notInUse'
retrieve any additional test results, and ifTestId
if (ifTestId == lock_value+1) results are valid
A manager station first retrieves the value of the
appropriate ifTestId and ifTestStatus objects, periodically
repeating the retrieval if necessary, until the value of
ifTestStatus is 'notInUse'.  The manager station then tries
to set the same ifTestId object to the value it just
retrieved, the same ifTestStatus object to 'inUse', and the
corresponding ifTestOwner object to a value indicating
itself.  If the set operation succeeds then the manager has
obtained ownership of the ifTestEntry, and the value of the
ifTestId object is incremented by the agent (per the
semantics of TestAndIncr).  Failure of the set operation
indicates that some other manager has obtained ownership of
the ifTestEntry.
Once ownership is obtained, any test parameters can be
setup, and then the test is initiated by setting ifTestType.
On completion of the test, the agent sets ifTestStatus to
'notInUse'.  Once this occurs, the manager can retrieve the
results.  In the (rare) event that the invocation of tests
by two network managers were to overlap, then there would be
a possibility that the first test's results might be
overwritten by the second test's results prior to the first
results being read.  This unlikely circumstance can be
detected by a network manager retrieving ifTestId at the
same time as retrieving the test results, and ensuring that
the results are for the desired request.
If ifTestType is not set within an abnormally long period of
time after ownership is obtained, the agent should time-out
the manager, and reset the value of the ifTestStatus object
back to 'notInUse'.  It is suggested that this time-out
period be 5 minutes.
In general, a management station must not retransmit a
request to invoke a test for which it does not receive a
response; instead, it properly inspects an agent's MIB to
determine if the invocation was successful.  Only if the
invocation was unsuccessful, is the invocation request
retransmitted.
Some tests may require the interface to be taken off-line in
order to execute them, or may even require the agent to
reboot after completion of the test.  In these
circumstances, communication with the management station
invoking the test may be lost until after completion of the
test.  An agent is not required to support such tests.
However, if such tests are supported, then the agent should
make every effort to transmit a response to the request
which invoked the test prior to losing communication.  When
the agent is restored to normal service, the results of the
test are properly made available in the appropriate objects.
Note that this requires that the ifIndex value assigned to
an interface must be unchanged even if the test causes a
reboot.  An agent must reject any test for which it cannot,
perhaps due to resource constraints, make available at least
the minimum amount of information after that test
completes."
::= { ifMIBObjects 3 }
ifTestEntry OBJECT-TYPE
SYNTAX       IfTestEntry
MAX-ACCESS   not-accessible
STATUS       deprecated
DESCRIPTION
"An entry containing objects for invoking tests on an
interface."
AUGMENTS  { ifEntry }
::= { ifTestTable 1 }
IfTestEntry ::=
SEQUENCE {
ifTestId           TestAndIncr,
ifTestStatus       INTEGER,
ifTestType         AutonomousType,
ifTestResult       INTEGER,
ifTestCode         OBJECT IDENTIFIER,
ifTestOwner        OwnerString
}
ifTestId         OBJECT-TYPE
SYNTAX       TestAndIncr
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object identifies the current invocation of the
interface's test."
::= { ifTestEntry 1 }
ifTestStatus     OBJECT-TYPE
SYNTAX       INTEGER { notInUse(1), inUse(2) }
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object indicates whether or not some manager currently
has the necessary 'ownership' required to invoke a test on
this interface.  A write to this object is only successful
when it changes its value from 'notInUse(1)' to 'inUse(2)'.
After completion of a test, the agent resets the value back
to 'notInUse(1)'."
::= { ifTestEntry 2 }
ifTestType       OBJECT-TYPE
SYNTAX       AutonomousType
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"A control variable used to start and stop operator-
initiated interface tests.  Most OBJECT IDENTIFIER values
assigned to tests are defined elsewhere, in association with
specific types of interface.  However, this document assigns
a value for a full-duplex loopback test, and defines the
special meanings of the subject identifier:
noTest  OBJECT IDENTIFIER ::= { 0 0 }
When the value noTest is written to this object, no action
is taken unless a test is in progress, in which case the
test is aborted.  Writing any other value to this object is
only valid when no test is currently in progress, in which
case the indicated test is initiated.
When read, this object always returns the most recent value
that ifTestType was set to.  If it has not been set since
the last initialization of the network management subsystem
on the agent, a value of noTest is returned."
::= { ifTestEntry 3 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }
ifCounterDiscontinuityGroup  OBJECT-GROUP
OBJECTS { ifCounterDiscontinuityTime }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
interface counter discontinuities."
::= { ifGroups 13 }
linkUpDownNotificationsGroup  NOTIFICATION-GROUP
NOTIFICATIONS { linkUp, linkDown }
STATUS  current
DESCRIPTION
"The notifications which indicate specific changes in the
value of ifOperStatus."
::= { ifGroups 14 }
ifTestTable   OBJECT-TYPE
SYNTAX      SEQUENCE OF IfTestEntry
MAX-ACCESS  not-accessible
STATUS      deprecated
DESCRIPTION
"This table contains one entry per interface.  It defines
objects which allow a network manager to instruct an agent
to test an interface for various faults.  Tests for an
interface are defined in the media-specific MIB for that
interface.  After invoking a test, the object ifTestResult
can be read to determine the outcome.  If an agent can not
perform the test, ifTestResult is set to so indicate.  The
object ifTestCode can be used to provide further test-
specific or interface-specific (or even enterprise-specific)
information concerning the outcome of the test.  Only one
test can be in progress on each interface at any one time.
If one test is in progress when another test is invoked, the
second test is rejected.  Some agents may reject a test when
a prior test is active on another interface.
Before starting a test, a manager-station must first obtain
'ownership' of the entry in the ifTestTable for the
interface to be tested.  This is accomplished with the
ifTestId and ifTestStatus objects as follows:
try_again:
get (ifTestId, ifTestStatus)
while (ifTestStatus != notInUse)
/*
* Loop while a test is running or some other
* manager is configuring a test.
*/
short delay
get (ifTestId, ifTestStatus)
}
/*
* Is not being used right now -- let's compete
* to see who gets it.
*/
lock_value = ifTestId
if ( set(ifTestId = lock_value, ifTestStatus = inUse,
ifTestOwner = 'my-IP-address') == FAILURE)
/*
* Another manager got the ifTestEntry -- go
* try again
*/
goto try_again;
/*
* I have the lock
*/
set up any test parameters.
/*
* This starts the test
*/
set(ifTestType = test_to_run);
wait for test completion by polling ifTestResult
when test completes, agent sets ifTestResult
agent also sets ifTestStatus = 'notInUse'
retrieve any additional test results, and ifTestId
if (ifTestId == lock_value+1) results are valid
A manager station first retrieves the value of the
appropriate ifTestId and ifTestStatus objects, periodically
repeating the retrieval if necessary, until the value of
ifTestStatus is 'notInUse'.  The manager station then tries
to set the same ifTestId object to the value it just
retrieved, the same ifTestStatus object to 'inUse', and the
corresponding ifTestOwner object to a value indicating
itself.  If the set operation succeeds then the manager has
obtained ownership of the ifTestEntry, and the value of the
ifTestId object is incremented by the agent (per the
semantics of TestAndIncr).  Failure of the set operation
indicates that some other manager has obtained ownership of
the ifTestEntry.
Once ownership is obtained, any test parameters can be
setup, and then the test is initiated by setting ifTestType.
On completion of the test, the agent sets ifTestStatus to
'notInUse'.  Once this occurs, the manager can retrieve the
results.  In the (rare) event that the invocation of tests
by two network managers were to overlap, then there would be
a possibility that the first test's results might be
overwritten by the second test's results prior to the first
results being read.  This unlikely circumstance can be
detected by a network manager retrieving ifTestId at the
same time as retrieving the test results, and ensuring that
the results are for the desired request.
If ifTestType is not set within an abnormally long period of
time after ownership is obtained, the agent should time-out
the manager, and reset the value of the ifTestStatus object
back to 'notInUse'.  It is suggested that this time-out
period be 5 minutes.
In general, a management station must not retransmit a
request to invoke a test for which it does not receive a
response; instead, it properly inspects an agent's MIB to
determine if the invocation was successful.  Only if the
invocation was unsuccessful, is the invocation request
retransmitted.
Some tests may require the interface to be taken off-line in
order to execute them, or may even require the agent to
reboot after completion of the test.  In these
circumstances, communication with the management station
invoking the test may be lost until after completion of the
test.  An agent is not required to support such tests.
However, if such tests are supported, then the agent should
make every effort to transmit a response to the request
which invoked the test prior to losing communication.  When
the agent is restored to normal service, the results of the
test are properly made available in the appropriate objects.
Note that this requires that the ifIndex value assigned to
an interface must be unchanged even if the test causes a
reboot.  An agent must reject any test for which it cannot,
perhaps due to resource constraints, make available at least
the minimum amount of information after that test
completes."
::= { ifMIBObjects 3 }
ifTestEntry OBJECT-TYPE
SYNTAX       IfTestEntry
MAX-ACCESS   not-accessible
STATUS       deprecated
DESCRIPTION
"An entry containing objects for invoking tests on an
interface."
AUGMENTS  { ifEntry }
::= { ifTestTable 1 }
IfTestEntry ::=
SEQUENCE {
ifTestId           TestAndIncr,
ifTestStatus       INTEGER,
ifTestType         AutonomousType,
ifTestResult       INTEGER,
ifTestCode         OBJECT IDENTIFIER,
ifTestOwner        OwnerString
}
ifTestId         OBJECT-TYPE
SYNTAX       TestAndIncr
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object identifies the current invocation of the
interface's test."
::= { ifTestEntry 1 }
ifTestStatus     OBJECT-TYPE
SYNTAX       INTEGER { notInUse(1), inUse(2) }
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object indicates whether or not some manager currently
has the necessary 'ownership' required to invoke a test on
this interface.  A write to this object is only successful
when it changes its value from 'notInUse(1)' to 'inUse(2)'.
After completion of a test, the agent resets the value back
to 'notInUse(1)'."
::= { ifTestEntry 2 }
ifTestType       OBJECT-TYPE
SYNTAX       AutonomousType
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"A control variable used to start and stop operator-
initiated interface tests.  Most OBJECT IDENTIFIER values
assigned to tests are defined elsewhere, in association with
specific types of interface.  However, this document assigns
a value for a full-duplex loopback test, and defines the
special meanings of the subject identifier:
noTest  OBJECT IDENTIFIER ::= { 0 0 }
When the value noTest is written to this object, no action
is taken unless a test is in progress, in which case the
test is aborted.  Writing any other value to this object is
only valid when no test is currently in progress, in which
case the indicated test is initiated.
When read, this object always returns the most recent value
that ifTestType was set to.  If it has not been set since
the last initialization of the network management subsystem
on the agent, a value of noTest is returned."
::= { ifTestEntry 3 }
ifTestResult  OBJECT-TYPE
SYNTAX       INTEGER {
none(1),          -- no test yet requested
success(2),
inProgress(3),
notSupported(4),
unAbleToRun(5),   -- due to state of system
aborted(6),
failed(7)
}
MAX-ACCESS   read-only
STATUS       deprecated
DESCRIPTION
"This object contains the result of the most recently
requested test, or the value none(1) if no tests have been
requested since the last reset.  Note that this facility
provides no provision for saving the results of one test
when starting another, as could be required if used by
multiple managers concurrently."
::= { ifTestEntry 4 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }
ifCounterDiscontinuityGroup  OBJECT-GROUP
OBJECTS { ifCounterDiscontinuityTime }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
interface counter discontinuities."
::= { ifGroups 13 }
linkUpDownNotificationsGroup  NOTIFICATION-GROUP
NOTIFICATIONS { linkUp, linkDown }
STATUS  current
DESCRIPTION
"The notifications which indicate specific changes in the
value of ifOperStatus."
::= { ifGroups 14 }
ifTestTable   OBJECT-TYPE
SYNTAX      SEQUENCE OF IfTestEntry
MAX-ACCESS  not-accessible
STATUS      deprecated
DESCRIPTION
"This table contains one entry per interface.  It defines
objects which allow a network manager to instruct an agent
to test an interface for various faults.  Tests for an
interface are defined in the media-specific MIB for that
interface.  After invoking a test, the object ifTestResult
can be read to determine the outcome.  If an agent can not
perform the test, ifTestResult is set to so indicate.  The
object ifTestCode can be used to provide further test-
specific or interface-specific (or even enterprise-specific)
information concerning the outcome of the test.  Only one
test can be in progress on each interface at any one time.
If one test is in progress when another test is invoked, the
second test is rejected.  Some agents may reject a test when
a prior test is active on another interface.
Before starting a test, a manager-station must first obtain
'ownership' of the entry in the ifTestTable for the
interface to be tested.  This is accomplished with the
ifTestId and ifTestStatus objects as follows:
try_again:
get (ifTestId, ifTestStatus)
while (ifTestStatus != notInUse)
/*
* Loop while a test is running or some other
* manager is configuring a test.
*/
short delay
get (ifTestId, ifTestStatus)
}
/*
* Is not being used right now -- let's compete
* to see who gets it.
*/
lock_value = ifTestId
if ( set(ifTestId = lock_value, ifTestStatus = inUse,
ifTestOwner = 'my-IP-address') == FAILURE)
/*
* Another manager got the ifTestEntry -- go
* try again
*/
goto try_again;
/*
* I have the lock
*/
set up any test parameters.
/*
* This starts the test
*/
set(ifTestType = test_to_run);
wait for test completion by polling ifTestResult
when test completes, agent sets ifTestResult
agent also sets ifTestStatus = 'notInUse'
retrieve any additional test results, and ifTestId
if (ifTestId == lock_value+1) results are valid
A manager station first retrieves the value of the
appropriate ifTestId and ifTestStatus objects, periodically
repeating the retrieval if necessary, until the value of
ifTestStatus is 'notInUse'.  The manager station then tries
to set the same ifTestId object to the value it just
retrieved, the same ifTestStatus object to 'inUse', and the
corresponding ifTestOwner object to a value indicating
itself.  If the set operation succeeds then the manager has
obtained ownership of the ifTestEntry, and the value of the
ifTestId object is incremented by the agent (per the
semantics of TestAndIncr).  Failure of the set operation
indicates that some other manager has obtained ownership of
the ifTestEntry.
Once ownership is obtained, any test parameters can be
setup, and then the test is initiated by setting ifTestType.
On completion of the test, the agent sets ifTestStatus to
'notInUse'.  Once this occurs, the manager can retrieve the
results.  In the (rare) event that the invocation of tests
by two network managers were to overlap, then there would be
a possibility that the first test's results might be
overwritten by the second test's results prior to the first
results being read.  This unlikely circumstance can be
detected by a network manager retrieving ifTestId at the
same time as retrieving the test results, and ensuring that
the results are for the desired request.
If ifTestType is not set within an abnormally long period of
time after ownership is obtained, the agent should time-out
the manager, and reset the value of the ifTestStatus object
back to 'notInUse'.  It is suggested that this time-out
period be 5 minutes.
In general, a management station must not retransmit a
request to invoke a test for which it does not receive a
response; instead, it properly inspects an agent's MIB to
determine if the invocation was successful.  Only if the
invocation was unsuccessful, is the invocation request
retransmitted.
Some tests may require the interface to be taken off-line in
order to execute them, or may even require the agent to
reboot after completion of the test.  In these
circumstances, communication with the management station
invoking the test may be lost until after completion of the
test.  An agent is not required to support such tests.
However, if such tests are supported, then the agent should
make every effort to transmit a response to the request
which invoked the test prior to losing communication.  When
the agent is restored to normal service, the results of the
test are properly made available in the appropriate objects.
Note that this requires that the ifIndex value assigned to
an interface must be unchanged even if the test causes a
reboot.  An agent must reject any test for which it cannot,
perhaps due to resource constraints, make available at least
the minimum amount of information after that test
completes."
::= { ifMIBObjects 3 }
ifTestEntry OBJECT-TYPE
SYNTAX       IfTestEntry
MAX-ACCESS   not-accessible
STATUS       deprecated
DESCRIPTION
"An entry containing objects for invoking tests on an
interface."
AUGMENTS  { ifEntry }
::= { ifTestTable 1 }
IfTestEntry ::=
SEQUENCE {
ifTestId           TestAndIncr,
ifTestStatus       INTEGER,
ifTestType         AutonomousType,
ifTestResult       INTEGER,
ifTestCode         OBJECT IDENTIFIER,
ifTestOwner        OwnerString
}
ifTestId         OBJECT-TYPE
SYNTAX       TestAndIncr
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object identifies the current invocation of the
interface's test."
::= { ifTestEntry 1 }
ifTestStatus     OBJECT-TYPE
SYNTAX       INTEGER { notInUse(1), inUse(2) }
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object indicates whether or not some manager currently
has the necessary 'ownership' required to invoke a test on
this interface.  A write to this object is only successful
when it changes its value from 'notInUse(1)' to 'inUse(2)'.
After completion of a test, the agent resets the value back
to 'notInUse(1)'."
::= { ifTestEntry 2 }
ifTestType       OBJECT-TYPE
SYNTAX       AutonomousType
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"A control variable used to start and stop operator-
initiated interface tests.  Most OBJECT IDENTIFIER values
assigned to tests are defined elsewhere, in association with
specific types of interface.  However, this document assigns
a value for a full-duplex loopback test, and defines the
special meanings of the subject identifier:
noTest  OBJECT IDENTIFIER ::= { 0 0 }
When the value noTest is written to this object, no action
is taken unless a test is in progress, in which case the
test is aborted.  Writing any other value to this object is
only valid when no test is currently in progress, in which
case the indicated test is initiated.
When read, this object always returns the most recent value
that ifTestType was set to.  If it has not been set since
the last initialization of the network management subsystem
on the agent, a value of noTest is returned."
::= { ifTestEntry 3 }
ifTestResult  OBJECT-TYPE
SYNTAX       INTEGER {
none(1),          -- no test yet requested
success(2),
inProgress(3),
notSupported(4),
unAbleToRun(5),   -- due to state of system
aborted(6),
failed(7)
}
MAX-ACCESS   read-only
STATUS       deprecated
DESCRIPTION
"This object contains the result of the most recently
requested test, or the value none(1) if no tests have been
requested since the last reset.  Note that this facility
provides no provision for saving the results of one test
when starting another, as could be required if used by
multiple managers concurrently."
::= { ifTestEntry 4 }
ifTestCode  OBJECT-TYPE
SYNTAX       OBJECT IDENTIFIER
MAX-ACCESS   read-only
STATUS       deprecated
DESCRIPTION
"This object contains a code which contains more specific
information on the test result, for example an error-code
after a failed test.  Error codes and other values this
object may take are specific to the type of interface and/or
test.  The value may have the semantics of either the
AutonomousType or InstancePointer textual conventions as
defined in RFC 2579.  The identifier:
testCodeUnknown  OBJECT IDENTIFIER ::= { 0 0 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }
ifCounterDiscontinuityGroup  OBJECT-GROUP
OBJECTS { ifCounterDiscontinuityTime }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
interface counter discontinuities."
::= { ifGroups 13 }
linkUpDownNotificationsGroup  NOTIFICATION-GROUP
NOTIFICATIONS { linkUp, linkDown }
STATUS  current
DESCRIPTION
"The notifications which indicate specific changes in the
value of ifOperStatus."
::= { ifGroups 14 }
ifTestTable   OBJECT-TYPE
SYNTAX      SEQUENCE OF IfTestEntry
MAX-ACCESS  not-accessible
STATUS      deprecated
DESCRIPTION
"This table contains one entry per interface.  It defines
objects which allow a network manager to instruct an agent
to test an interface for various faults.  Tests for an
interface are defined in the media-specific MIB for that
interface.  After invoking a test, the object ifTestResult
can be read to determine the outcome.  If an agent can not
perform the test, ifTestResult is set to so indicate.  The
object ifTestCode can be used to provide further test-
specific or interface-specific (or even enterprise-specific)
information concerning the outcome of the test.  Only one
test can be in progress on each interface at any one time.
If one test is in progress when another test is invoked, the
second test is rejected.  Some agents may reject a test when
a prior test is active on another interface.
Before starting a test, a manager-station must first obtain
'ownership' of the entry in the ifTestTable for the
interface to be tested.  This is accomplished with the
ifTestId and ifTestStatus objects as follows:
try_again:
get (ifTestId, ifTestStatus)
while (ifTestStatus != notInUse)
/*
* Loop while a test is running or some other
* manager is configuring a test.
*/
short delay
get (ifTestId, ifTestStatus)
}
/*
* Is not being used right now -- let's compete
* to see who gets it.
*/
lock_value = ifTestId
if ( set(ifTestId = lock_value, ifTestStatus = inUse,
ifTestOwner = 'my-IP-address') == FAILURE)
/*
* Another manager got the ifTestEntry -- go
* try again
*/
goto try_again;
/*
* I have the lock
*/
set up any test parameters.
/*
* This starts the test
*/
set(ifTestType = test_to_run);
wait for test completion by polling ifTestResult
when test completes, agent sets ifTestResult
agent also sets ifTestStatus = 'notInUse'
retrieve any additional test results, and ifTestId
if (ifTestId == lock_value+1) results are valid
A manager station first retrieves the value of the
appropriate ifTestId and ifTestStatus objects, periodically
repeating the retrieval if necessary, until the value of
ifTestStatus is 'notInUse'.  The manager station then tries
to set the same ifTestId object to the value it just
retrieved, the same ifTestStatus object to 'inUse', and the
corresponding ifTestOwner object to a value indicating
itself.  If the set operation succeeds then the manager has
obtained ownership of the ifTestEntry, and the value of the
ifTestId object is incremented by the agent (per the
semantics of TestAndIncr).  Failure of the set operation
indicates that some other manager has obtained ownership of
the ifTestEntry.
Once ownership is obtained, any test parameters can be
setup, and then the test is initiated by setting ifTestType.
On completion of the test, the agent sets ifTestStatus to
'notInUse'.  Once this occurs, the manager can retrieve the
results.  In the (rare) event that the invocation of tests
by two network managers were to overlap, then there would be
a possibility that the first test's results might be
overwritten by the second test's results prior to the first
results being read.  This unlikely circumstance can be
detected by a network manager retrieving ifTestId at the
same time as retrieving the test results, and ensuring that
the results are for the desired request.
If ifTestType is not set within an abnormally long period of
time after ownership is obtained, the agent should time-out
the manager, and reset the value of the ifTestStatus object
back to 'notInUse'.  It is suggested that this time-out
period be 5 minutes.
In general, a management station must not retransmit a
request to invoke a test for which it does not receive a
response; instead, it properly inspects an agent's MIB to
determine if the invocation was successful.  Only if the
invocation was unsuccessful, is the invocation request
retransmitted.
Some tests may require the interface to be taken off-line in
order to execute them, or may even require the agent to
reboot after completion of the test.  In these
circumstances, communication with the management station
invoking the test may be lost until after completion of the
test.  An agent is not required to support such tests.
However, if such tests are supported, then the agent should
make every effort to transmit a response to the request
which invoked the test prior to losing communication.  When
the agent is restored to normal service, the results of the
test are properly made available in the appropriate objects.
Note that this requires that the ifIndex value assigned to
an interface must be unchanged even if the test causes a
reboot.  An agent must reject any test for which it cannot,
perhaps due to resource constraints, make available at least
the minimum amount of information after that test
completes."
::= { ifMIBObjects 3 }
ifTestEntry OBJECT-TYPE
SYNTAX       IfTestEntry
MAX-ACCESS   not-accessible
STATUS       deprecated
DESCRIPTION
"An entry containing objects for invoking tests on an
interface."
AUGMENTS  { ifEntry }
::= { ifTestTable 1 }
IfTestEntry ::=
SEQUENCE {
ifTestId           TestAndIncr,
ifTestStatus       INTEGER,
ifTestType         AutonomousType,
ifTestResult       INTEGER,
ifTestCode         OBJECT IDENTIFIER,
ifTestOwner        OwnerString
}
ifTestId         OBJECT-TYPE
SYNTAX       TestAndIncr
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object identifies the current invocation of the
interface's test."
::= { ifTestEntry 1 }
ifTestStatus     OBJECT-TYPE
SYNTAX       INTEGER { notInUse(1), inUse(2) }
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object indicates whether or not some manager currently
has the necessary 'ownership' required to invoke a test on
this interface.  A write to this object is only successful
when it changes its value from 'notInUse(1)' to 'inUse(2)'.
After completion of a test, the agent resets the value back
to 'notInUse(1)'."
::= { ifTestEntry 2 }
ifTestType       OBJECT-TYPE
SYNTAX       AutonomousType
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"A control variable used to start and stop operator-
initiated interface tests.  Most OBJECT IDENTIFIER values
assigned to tests are defined elsewhere, in association with
specific types of interface.  However, this document assigns
a value for a full-duplex loopback test, and defines the
special meanings of the subject identifier:
noTest  OBJECT IDENTIFIER ::= { 0 0 }
When the value noTest is written to this object, no action
is taken unless a test is in progress, in which case the
test is aborted.  Writing any other value to this object is
only valid when no test is currently in progress, in which
case the indicated test is initiated.
When read, this object always returns the most recent value
that ifTestType was set to.  If it has not been set since
the last initialization of the network management subsystem
on the agent, a value of noTest is returned."
::= { ifTestEntry 3 }
ifTestResult  OBJECT-TYPE
SYNTAX       INTEGER {
none(1),          -- no test yet requested
success(2),
inProgress(3),
notSupported(4),
unAbleToRun(5),   -- due to state of system
aborted(6),
failed(7)
}
MAX-ACCESS   read-only
STATUS       deprecated
DESCRIPTION
"This object contains the result of the most recently
requested test, or the value none(1) if no tests have been
requested since the last reset.  Note that this facility
provides no provision for saving the results of one test
when starting another, as could be required if used by
multiple managers concurrently."
::= { ifTestEntry 4 }
ifTestCode  OBJECT-TYPE
SYNTAX       OBJECT IDENTIFIER
MAX-ACCESS   read-only
STATUS       deprecated
DESCRIPTION
"This object contains a code which contains more specific
information on the test result, for example an error-code
after a failed test.  Error codes and other values this
object may take are specific to the type of interface and/or
test.  The value may have the semantics of either the
AutonomousType or InstancePointer textual conventions as
defined in RFC 2579.  The identifier:
testCodeUnknown  OBJECT IDENTIFIER ::= { 0 0 }
is defined for use if no additional result code is
available."
::= { ifTestEntry 5 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }
ifCounterDiscontinuityGroup  OBJECT-GROUP
OBJECTS { ifCounterDiscontinuityTime }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
interface counter discontinuities."
::= { ifGroups 13 }
linkUpDownNotificationsGroup  NOTIFICATION-GROUP
NOTIFICATIONS { linkUp, linkDown }
STATUS  current
DESCRIPTION
"The notifications which indicate specific changes in the
value of ifOperStatus."
::= { ifGroups 14 }
ifTestTable   OBJECT-TYPE
SYNTAX      SEQUENCE OF IfTestEntry
MAX-ACCESS  not-accessible
STATUS      deprecated
DESCRIPTION
"This table contains one entry per interface.  It defines
objects which allow a network manager to instruct an agent
to test an interface for various faults.  Tests for an
interface are defined in the media-specific MIB for that
interface.  After invoking a test, the object ifTestResult
can be read to determine the outcome.  If an agent can not
perform the test, ifTestResult is set to so indicate.  The
object ifTestCode can be used to provide further test-
specific or interface-specific (or even enterprise-specific)
information concerning the outcome of the test.  Only one
test can be in progress on each interface at any one time.
If one test is in progress when another test is invoked, the
second test is rejected.  Some agents may reject a test when
a prior test is active on another interface.
Before starting a test, a manager-station must first obtain
'ownership' of the entry in the ifTestTable for the
interface to be tested.  This is accomplished with the
ifTestId and ifTestStatus objects as follows:
try_again:
get (ifTestId, ifTestStatus)
while (ifTestStatus != notInUse)
/*
* Loop while a test is running or some other
* manager is configuring a test.
*/
short delay
get (ifTestId, ifTestStatus)
}
/*
* Is not being used right now -- let's compete
* to see who gets it.
*/
lock_value = ifTestId
if ( set(ifTestId = lock_value, ifTestStatus = inUse,
ifTestOwner = 'my-IP-address') == FAILURE)
/*
* Another manager got the ifTestEntry -- go
* try again
*/
goto try_again;
/*
* I have the lock
*/
set up any test parameters.
/*
* This starts the test
*/
set(ifTestType = test_to_run);
wait for test completion by polling ifTestResult
when test completes, agent sets ifTestResult
agent also sets ifTestStatus = 'notInUse'
retrieve any additional test results, and ifTestId
if (ifTestId == lock_value+1) results are valid
A manager station first retrieves the value of the
appropriate ifTestId and ifTestStatus objects, periodically
repeating the retrieval if necessary, until the value of
ifTestStatus is 'notInUse'.  The manager station then tries
to set the same ifTestId object to the value it just
retrieved, the same ifTestStatus object to 'inUse', and the
corresponding ifTestOwner object to a value indicating
itself.  If the set operation succeeds then the manager has
obtained ownership of the ifTestEntry, and the value of the
ifTestId object is incremented by the agent (per the
semantics of TestAndIncr).  Failure of the set operation
indicates that some other manager has obtained ownership of
the ifTestEntry.
Once ownership is obtained, any test parameters can be
setup, and then the test is initiated by setting ifTestType.
On completion of the test, the agent sets ifTestStatus to
'notInUse'.  Once this occurs, the manager can retrieve the
results.  In the (rare) event that the invocation of tests
by two network managers were to overlap, then there would be
a possibility that the first test's results might be
overwritten by the second test's results prior to the first
results being read.  This unlikely circumstance can be
detected by a network manager retrieving ifTestId at the
same time as retrieving the test results, and ensuring that
the results are for the desired request.
If ifTestType is not set within an abnormally long period of
time after ownership is obtained, the agent should time-out
the manager, and reset the value of the ifTestStatus object
back to 'notInUse'.  It is suggested that this time-out
period be 5 minutes.
In general, a management station must not retransmit a
request to invoke a test for which it does not receive a
response; instead, it properly inspects an agent's MIB to
determine if the invocation was successful.  Only if the
invocation was unsuccessful, is the invocation request
retransmitted.
Some tests may require the interface to be taken off-line in
order to execute them, or may even require the agent to
reboot after completion of the test.  In these
circumstances, communication with the management station
invoking the test may be lost until after completion of the
test.  An agent is not required to support such tests.
However, if such tests are supported, then the agent should
make every effort to transmit a response to the request
which invoked the test prior to losing communication.  When
the agent is restored to normal service, the results of the
test are properly made available in the appropriate objects.
Note that this requires that the ifIndex value assigned to
an interface must be unchanged even if the test causes a
reboot.  An agent must reject any test for which it cannot,
perhaps due to resource constraints, make available at least
the minimum amount of information after that test
completes."
::= { ifMIBObjects 3 }
ifTestEntry OBJECT-TYPE
SYNTAX       IfTestEntry
MAX-ACCESS   not-accessible
STATUS       deprecated
DESCRIPTION
"An entry containing objects for invoking tests on an
interface."
AUGMENTS  { ifEntry }
::= { ifTestTable 1 }
IfTestEntry ::=
SEQUENCE {
ifTestId           TestAndIncr,
ifTestStatus       INTEGER,
ifTestType         AutonomousType,
ifTestResult       INTEGER,
ifTestCode         OBJECT IDENTIFIER,
ifTestOwner        OwnerString
}
ifTestId         OBJECT-TYPE
SYNTAX       TestAndIncr
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object identifies the current invocation of the
interface's test."
::= { ifTestEntry 1 }
ifTestStatus     OBJECT-TYPE
SYNTAX       INTEGER { notInUse(1), inUse(2) }
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object indicates whether or not some manager currently
has the necessary 'ownership' required to invoke a test on
this interface.  A write to this object is only successful
when it changes its value from 'notInUse(1)' to 'inUse(2)'.
After completion of a test, the agent resets the value back
to 'notInUse(1)'."
::= { ifTestEntry 2 }
ifTestType       OBJECT-TYPE
SYNTAX       AutonomousType
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"A control variable used to start and stop operator-
initiated interface tests.  Most OBJECT IDENTIFIER values
assigned to tests are defined elsewhere, in association with
specific types of interface.  However, this document assigns
a value for a full-duplex loopback test, and defines the
special meanings of the subject identifier:
noTest  OBJECT IDENTIFIER ::= { 0 0 }
When the value noTest is written to this object, no action
is taken unless a test is in progress, in which case the
test is aborted.  Writing any other value to this object is
only valid when no test is currently in progress, in which
case the indicated test is initiated.
When read, this object always returns the most recent value
that ifTestType was set to.  If it has not been set since
the last initialization of the network management subsystem
on the agent, a value of noTest is returned."
::= { ifTestEntry 3 }
ifTestResult  OBJECT-TYPE
SYNTAX       INTEGER {
none(1),          -- no test yet requested
success(2),
inProgress(3),
notSupported(4),
unAbleToRun(5),   -- due to state of system
aborted(6),
failed(7)
}
MAX-ACCESS   read-only
STATUS       deprecated
DESCRIPTION
"This object contains the result of the most recently
requested test, or the value none(1) if no tests have been
requested since the last reset.  Note that this facility
provides no provision for saving the results of one test
when starting another, as could be required if used by
multiple managers concurrently."
::= { ifTestEntry 4 }
ifTestCode  OBJECT-TYPE
SYNTAX       OBJECT IDENTIFIER
MAX-ACCESS   read-only
STATUS       deprecated
DESCRIPTION
"This object contains a code which contains more specific
information on the test result, for example an error-code
after a failed test.  Error codes and other values this
object may take are specific to the type of interface and/or
test.  The value may have the semantics of either the
AutonomousType or InstancePointer textual conventions as
defined in RFC 2579.  The identifier:
testCodeUnknown  OBJECT IDENTIFIER ::= { 0 0 }
is defined for use if no additional result code is
available."
::= { ifTestEntry 5 }
ifTestOwner      OBJECT-TYPE
SYNTAX       OwnerString
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"The entity which currently has the 'ownership' required to
invoke a test on this interface."
::= { ifTestEntry 6 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }
ifCounterDiscontinuityGroup  OBJECT-GROUP
OBJECTS { ifCounterDiscontinuityTime }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
interface counter discontinuities."
::= { ifGroups 13 }
linkUpDownNotificationsGroup  NOTIFICATION-GROUP
NOTIFICATIONS { linkUp, linkDown }
STATUS  current
DESCRIPTION
"The notifications which indicate specific changes in the
value of ifOperStatus."
::= { ifGroups 14 }
ifTestTable   OBJECT-TYPE
SYNTAX      SEQUENCE OF IfTestEntry
MAX-ACCESS  not-accessible
STATUS      deprecated
DESCRIPTION
"This table contains one entry per interface.  It defines
objects which allow a network manager to instruct an agent
to test an interface for various faults.  Tests for an
interface are defined in the media-specific MIB for that
interface.  After invoking a test, the object ifTestResult
can be read to determine the outcome.  If an agent can not
perform the test, ifTestResult is set to so indicate.  The
object ifTestCode can be used to provide further test-
specific or interface-specific (or even enterprise-specific)
information concerning the outcome of the test.  Only one
test can be in progress on each interface at any one time.
If one test is in progress when another test is invoked, the
second test is rejected.  Some agents may reject a test when
a prior test is active on another interface.
Before starting a test, a manager-station must first obtain
'ownership' of the entry in the ifTestTable for the
interface to be tested.  This is accomplished with the
ifTestId and ifTestStatus objects as follows:
try_again:
get (ifTestId, ifTestStatus)
while (ifTestStatus != notInUse)
/*
* Loop while a test is running or some other
* manager is configuring a test.
*/
short delay
get (ifTestId, ifTestStatus)
}
/*
* Is not being used right now -- let's compete
* to see who gets it.
*/
lock_value = ifTestId
if ( set(ifTestId = lock_value, ifTestStatus = inUse,
ifTestOwner = 'my-IP-address') == FAILURE)
/*
* Another manager got the ifTestEntry -- go
* try again
*/
goto try_again;
/*
* I have the lock
*/
set up any test parameters.
/*
* This starts the test
*/
set(ifTestType = test_to_run);
wait for test completion by polling ifTestResult
when test completes, agent sets ifTestResult
agent also sets ifTestStatus = 'notInUse'
retrieve any additional test results, and ifTestId
if (ifTestId == lock_value+1) results are valid
A manager station first retrieves the value of the
appropriate ifTestId and ifTestStatus objects, periodically
repeating the retrieval if necessary, until the value of
ifTestStatus is 'notInUse'.  The manager station then tries
to set the same ifTestId object to the value it just
retrieved, the same ifTestStatus object to 'inUse', and the
corresponding ifTestOwner object to a value indicating
itself.  If the set operation succeeds then the manager has
obtained ownership of the ifTestEntry, and the value of the
ifTestId object is incremented by the agent (per the
semantics of TestAndIncr).  Failure of the set operation
indicates that some other manager has obtained ownership of
the ifTestEntry.
Once ownership is obtained, any test parameters can be
setup, and then the test is initiated by setting ifTestType.
On completion of the test, the agent sets ifTestStatus to
'notInUse'.  Once this occurs, the manager can retrieve the
results.  In the (rare) event that the invocation of tests
by two network managers were to overlap, then there would be
a possibility that the first test's results might be
overwritten by the second test's results prior to the first
results being read.  This unlikely circumstance can be
detected by a network manager retrieving ifTestId at the
same time as retrieving the test results, and ensuring that
the results are for the desired request.
If ifTestType is not set within an abnormally long period of
time after ownership is obtained, the agent should time-out
the manager, and reset the value of the ifTestStatus object
back to 'notInUse'.  It is suggested that this time-out
period be 5 minutes.
In general, a management station must not retransmit a
request to invoke a test for which it does not receive a
response; instead, it properly inspects an agent's MIB to
determine if the invocation was successful.  Only if the
invocation was unsuccessful, is the invocation request
retransmitted.
Some tests may require the interface to be taken off-line in
order to execute them, or may even require the agent to
reboot after completion of the test.  In these
circumstances, communication with the management station
invoking the test may be lost until after completion of the
test.  An agent is not required to support such tests.
However, if such tests are supported, then the agent should
make every effort to transmit a response to the request
which invoked the test prior to losing communication.  When
the agent is restored to normal service, the results of the
test are properly made available in the appropriate objects.
Note that this requires that the ifIndex value assigned to
an interface must be unchanged even if the test causes a
reboot.  An agent must reject any test for which it cannot,
perhaps due to resource constraints, make available at least
the minimum amount of information after that test
completes."
::= { ifMIBObjects 3 }
ifTestEntry OBJECT-TYPE
SYNTAX       IfTestEntry
MAX-ACCESS   not-accessible
STATUS       deprecated
DESCRIPTION
"An entry containing objects for invoking tests on an
interface."
AUGMENTS  { ifEntry }
::= { ifTestTable 1 }
IfTestEntry ::=
SEQUENCE {
ifTestId           TestAndIncr,
ifTestStatus       INTEGER,
ifTestType         AutonomousType,
ifTestResult       INTEGER,
ifTestCode         OBJECT IDENTIFIER,
ifTestOwner        OwnerString
}
ifTestId         OBJECT-TYPE
SYNTAX       TestAndIncr
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object identifies the current invocation of the
interface's test."
::= { ifTestEntry 1 }
ifTestStatus     OBJECT-TYPE
SYNTAX       INTEGER { notInUse(1), inUse(2) }
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object indicates whether or not some manager currently
has the necessary 'ownership' required to invoke a test on
this interface.  A write to this object is only successful
when it changes its value from 'notInUse(1)' to 'inUse(2)'.
After completion of a test, the agent resets the value back
to 'notInUse(1)'."
::= { ifTestEntry 2 }
ifTestType       OBJECT-TYPE
SYNTAX       AutonomousType
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"A control variable used to start and stop operator-
initiated interface tests.  Most OBJECT IDENTIFIER values
assigned to tests are defined elsewhere, in association with
specific types of interface.  However, this document assigns
a value for a full-duplex loopback test, and defines the
special meanings of the subject identifier:
noTest  OBJECT IDENTIFIER ::= { 0 0 }
When the value noTest is written to this object, no action
is taken unless a test is in progress, in which case the
test is aborted.  Writing any other value to this object is
only valid when no test is currently in progress, in which
case the indicated test is initiated.
When read, this object always returns the most recent value
that ifTestType was set to.  If it has not been set since
the last initialization of the network management subsystem
on the agent, a value of noTest is returned."
::= { ifTestEntry 3 }
ifTestResult  OBJECT-TYPE
SYNTAX       INTEGER {
none(1),          -- no test yet requested
success(2),
inProgress(3),
notSupported(4),
unAbleToRun(5),   -- due to state of system
aborted(6),
failed(7)
}
MAX-ACCESS   read-only
STATUS       deprecated
DESCRIPTION
"This object contains the result of the most recently
requested test, or the value none(1) if no tests have been
requested since the last reset.  Note that this facility
provides no provision for saving the results of one test
when starting another, as could be required if used by
multiple managers concurrently."
::= { ifTestEntry 4 }
ifTestCode  OBJECT-TYPE
SYNTAX       OBJECT IDENTIFIER
MAX-ACCESS   read-only
STATUS       deprecated
DESCRIPTION
"This object contains a code which contains more specific
information on the test result, for example an error-code
after a failed test.  Error codes and other values this
object may take are specific to the type of interface and/or
test.  The value may have the semantics of either the
AutonomousType or InstancePointer textual conventions as
defined in RFC 2579.  The identifier:
testCodeUnknown  OBJECT IDENTIFIER ::= { 0 0 }
is defined for use if no additional result code is
available."
::= { ifTestEntry 5 }
ifTestOwner      OBJECT-TYPE
SYNTAX       OwnerString
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"The entity which currently has the 'ownership' required to
invoke a test on this interface."
::= { ifTestEntry 6 }
ifGeneralGroup    OBJECT-GROUP
OBJECTS { ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName }
STATUS  deprecated
DESCRIPTION
"A collection of objects deprecated in favour of
ifGeneralInformationGroup."
::= { ifGroups 1 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }
ifCounterDiscontinuityGroup  OBJECT-GROUP
OBJECTS { ifCounterDiscontinuityTime }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
interface counter discontinuities."
::= { ifGroups 13 }
linkUpDownNotificationsGroup  NOTIFICATION-GROUP
NOTIFICATIONS { linkUp, linkDown }
STATUS  current
DESCRIPTION
"The notifications which indicate specific changes in the
value of ifOperStatus."
::= { ifGroups 14 }
ifTestTable   OBJECT-TYPE
SYNTAX      SEQUENCE OF IfTestEntry
MAX-ACCESS  not-accessible
STATUS      deprecated
DESCRIPTION
"This table contains one entry per interface.  It defines
objects which allow a network manager to instruct an agent
to test an interface for various faults.  Tests for an
interface are defined in the media-specific MIB for that
interface.  After invoking a test, the object ifTestResult
can be read to determine the outcome.  If an agent can not
perform the test, ifTestResult is set to so indicate.  The
object ifTestCode can be used to provide further test-
specific or interface-specific (or even enterprise-specific)
information concerning the outcome of the test.  Only one
test can be in progress on each interface at any one time.
If one test is in progress when another test is invoked, the
second test is rejected.  Some agents may reject a test when
a prior test is active on another interface.
Before starting a test, a manager-station must first obtain
'ownership' of the entry in the ifTestTable for the
interface to be tested.  This is accomplished with the
ifTestId and ifTestStatus objects as follows:
try_again:
get (ifTestId, ifTestStatus)
while (ifTestStatus != notInUse)
/*
* Loop while a test is running or some other
* manager is configuring a test.
*/
short delay
get (ifTestId, ifTestStatus)
}
/*
* Is not being used right now -- let's compete
* to see who gets it.
*/
lock_value = ifTestId
if ( set(ifTestId = lock_value, ifTestStatus = inUse,
ifTestOwner = 'my-IP-address') == FAILURE)
/*
* Another manager got the ifTestEntry -- go
* try again
*/
goto try_again;
/*
* I have the lock
*/
set up any test parameters.
/*
* This starts the test
*/
set(ifTestType = test_to_run);
wait for test completion by polling ifTestResult
when test completes, agent sets ifTestResult
agent also sets ifTestStatus = 'notInUse'
retrieve any additional test results, and ifTestId
if (ifTestId == lock_value+1) results are valid
A manager station first retrieves the value of the
appropriate ifTestId and ifTestStatus objects, periodically
repeating the retrieval if necessary, until the value of
ifTestStatus is 'notInUse'.  The manager station then tries
to set the same ifTestId object to the value it just
retrieved, the same ifTestStatus object to 'inUse', and the
corresponding ifTestOwner object to a value indicating
itself.  If the set operation succeeds then the manager has
obtained ownership of the ifTestEntry, and the value of the
ifTestId object is incremented by the agent (per the
semantics of TestAndIncr).  Failure of the set operation
indicates that some other manager has obtained ownership of
the ifTestEntry.
Once ownership is obtained, any test parameters can be
setup, and then the test is initiated by setting ifTestType.
On completion of the test, the agent sets ifTestStatus to
'notInUse'.  Once this occurs, the manager can retrieve the
results.  In the (rare) event that the invocation of tests
by two network managers were to overlap, then there would be
a possibility that the first test's results might be
overwritten by the second test's results prior to the first
results being read.  This unlikely circumstance can be
detected by a network manager retrieving ifTestId at the
same time as retrieving the test results, and ensuring that
the results are for the desired request.
If ifTestType is not set within an abnormally long period of
time after ownership is obtained, the agent should time-out
the manager, and reset the value of the ifTestStatus object
back to 'notInUse'.  It is suggested that this time-out
period be 5 minutes.
In general, a management station must not retransmit a
request to invoke a test for which it does not receive a
response; instead, it properly inspects an agent's MIB to
determine if the invocation was successful.  Only if the
invocation was unsuccessful, is the invocation request
retransmitted.
Some tests may require the interface to be taken off-line in
order to execute them, or may even require the agent to
reboot after completion of the test.  In these
circumstances, communication with the management station
invoking the test may be lost until after completion of the
test.  An agent is not required to support such tests.
However, if such tests are supported, then the agent should
make every effort to transmit a response to the request
which invoked the test prior to losing communication.  When
the agent is restored to normal service, the results of the
test are properly made available in the appropriate objects.
Note that this requires that the ifIndex value assigned to
an interface must be unchanged even if the test causes a
reboot.  An agent must reject any test for which it cannot,
perhaps due to resource constraints, make available at least
the minimum amount of information after that test
completes."
::= { ifMIBObjects 3 }
ifTestEntry OBJECT-TYPE
SYNTAX       IfTestEntry
MAX-ACCESS   not-accessible
STATUS       deprecated
DESCRIPTION
"An entry containing objects for invoking tests on an
interface."
AUGMENTS  { ifEntry }
::= { ifTestTable 1 }
IfTestEntry ::=
SEQUENCE {
ifTestId           TestAndIncr,
ifTestStatus       INTEGER,
ifTestType         AutonomousType,
ifTestResult       INTEGER,
ifTestCode         OBJECT IDENTIFIER,
ifTestOwner        OwnerString
}
ifTestId         OBJECT-TYPE
SYNTAX       TestAndIncr
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object identifies the current invocation of the
interface's test."
::= { ifTestEntry 1 }
ifTestStatus     OBJECT-TYPE
SYNTAX       INTEGER { notInUse(1), inUse(2) }
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object indicates whether or not some manager currently
has the necessary 'ownership' required to invoke a test on
this interface.  A write to this object is only successful
when it changes its value from 'notInUse(1)' to 'inUse(2)'.
After completion of a test, the agent resets the value back
to 'notInUse(1)'."
::= { ifTestEntry 2 }
ifTestType       OBJECT-TYPE
SYNTAX       AutonomousType
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"A control variable used to start and stop operator-
initiated interface tests.  Most OBJECT IDENTIFIER values
assigned to tests are defined elsewhere, in association with
specific types of interface.  However, this document assigns
a value for a full-duplex loopback test, and defines the
special meanings of the subject identifier:
noTest  OBJECT IDENTIFIER ::= { 0 0 }
When the value noTest is written to this object, no action
is taken unless a test is in progress, in which case the
test is aborted.  Writing any other value to this object is
only valid when no test is currently in progress, in which
case the indicated test is initiated.
When read, this object always returns the most recent value
that ifTestType was set to.  If it has not been set since
the last initialization of the network management subsystem
on the agent, a value of noTest is returned."
::= { ifTestEntry 3 }
ifTestResult  OBJECT-TYPE
SYNTAX       INTEGER {
none(1),          -- no test yet requested
success(2),
inProgress(3),
notSupported(4),
unAbleToRun(5),   -- due to state of system
aborted(6),
failed(7)
}
MAX-ACCESS   read-only
STATUS       deprecated
DESCRIPTION
"This object contains the result of the most recently
requested test, or the value none(1) if no tests have been
requested since the last reset.  Note that this facility
provides no provision for saving the results of one test
when starting another, as could be required if used by
multiple managers concurrently."
::= { ifTestEntry 4 }
ifTestCode  OBJECT-TYPE
SYNTAX       OBJECT IDENTIFIER
MAX-ACCESS   read-only
STATUS       deprecated
DESCRIPTION
"This object contains a code which contains more specific
information on the test result, for example an error-code
after a failed test.  Error codes and other values this
object may take are specific to the type of interface and/or
test.  The value may have the semantics of either the
AutonomousType or InstancePointer textual conventions as
defined in RFC 2579.  The identifier:
testCodeUnknown  OBJECT IDENTIFIER ::= { 0 0 }
is defined for use if no additional result code is
available."
::= { ifTestEntry 5 }
ifTestOwner      OBJECT-TYPE
SYNTAX       OwnerString
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"The entity which currently has the 'ownership' required to
invoke a test on this interface."
::= { ifTestEntry 6 }
ifGeneralGroup    OBJECT-GROUP
OBJECTS { ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName }
STATUS  deprecated
DESCRIPTION
"A collection of objects deprecated in favour of
ifGeneralInformationGroup."
::= { ifGroups 1 }
ifTestGroup    OBJECT-GROUP
OBJECTS { ifTestId, ifTestStatus, ifTestType,
ifTestResult, ifTestCode, ifTestOwner }
STATUS  deprecated
DESCRIPTION
"A collection of objects providing the ability to invoke
tests on an interface."
::= { ifGroups 8 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }
ifCounterDiscontinuityGroup  OBJECT-GROUP
OBJECTS { ifCounterDiscontinuityTime }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
interface counter discontinuities."
::= { ifGroups 13 }
linkUpDownNotificationsGroup  NOTIFICATION-GROUP
NOTIFICATIONS { linkUp, linkDown }
STATUS  current
DESCRIPTION
"The notifications which indicate specific changes in the
value of ifOperStatus."
::= { ifGroups 14 }
ifTestTable   OBJECT-TYPE
SYNTAX      SEQUENCE OF IfTestEntry
MAX-ACCESS  not-accessible
STATUS      deprecated
DESCRIPTION
"This table contains one entry per interface.  It defines
objects which allow a network manager to instruct an agent
to test an interface for various faults.  Tests for an
interface are defined in the media-specific MIB for that
interface.  After invoking a test, the object ifTestResult
can be read to determine the outcome.  If an agent can not
perform the test, ifTestResult is set to so indicate.  The
object ifTestCode can be used to provide further test-
specific or interface-specific (or even enterprise-specific)
information concerning the outcome of the test.  Only one
test can be in progress on each interface at any one time.
If one test is in progress when another test is invoked, the
second test is rejected.  Some agents may reject a test when
a prior test is active on another interface.
Before starting a test, a manager-station must first obtain
'ownership' of the entry in the ifTestTable for the
interface to be tested.  This is accomplished with the
ifTestId and ifTestStatus objects as follows:
try_again:
get (ifTestId, ifTestStatus)
while (ifTestStatus != notInUse)
/*
* Loop while a test is running or some other
* manager is configuring a test.
*/
short delay
get (ifTestId, ifTestStatus)
}
/*
* Is not being used right now -- let's compete
* to see who gets it.
*/
lock_value = ifTestId
if ( set(ifTestId = lock_value, ifTestStatus = inUse,
ifTestOwner = 'my-IP-address') == FAILURE)
/*
* Another manager got the ifTestEntry -- go
* try again
*/
goto try_again;
/*
* I have the lock
*/
set up any test parameters.
/*
* This starts the test
*/
set(ifTestType = test_to_run);
wait for test completion by polling ifTestResult
when test completes, agent sets ifTestResult
agent also sets ifTestStatus = 'notInUse'
retrieve any additional test results, and ifTestId
if (ifTestId == lock_value+1) results are valid
A manager station first retrieves the value of the
appropriate ifTestId and ifTestStatus objects, periodically
repeating the retrieval if necessary, until the value of
ifTestStatus is 'notInUse'.  The manager station then tries
to set the same ifTestId object to the value it just
retrieved, the same ifTestStatus object to 'inUse', and the
corresponding ifTestOwner object to a value indicating
itself.  If the set operation succeeds then the manager has
obtained ownership of the ifTestEntry, and the value of the
ifTestId object is incremented by the agent (per the
semantics of TestAndIncr).  Failure of the set operation
indicates that some other manager has obtained ownership of
the ifTestEntry.
Once ownership is obtained, any test parameters can be
setup, and then the test is initiated by setting ifTestType.
On completion of the test, the agent sets ifTestStatus to
'notInUse'.  Once this occurs, the manager can retrieve the
results.  In the (rare) event that the invocation of tests
by two network managers were to overlap, then there would be
a possibility that the first test's results might be
overwritten by the second test's results prior to the first
results being read.  This unlikely circumstance can be
detected by a network manager retrieving ifTestId at the
same time as retrieving the test results, and ensuring that
the results are for the desired request.
If ifTestType is not set within an abnormally long period of
time after ownership is obtained, the agent should time-out
the manager, and reset the value of the ifTestStatus object
back to 'notInUse'.  It is suggested that this time-out
period be 5 minutes.
In general, a management station must not retransmit a
request to invoke a test for which it does not receive a
response; instead, it properly inspects an agent's MIB to
determine if the invocation was successful.  Only if the
invocation was unsuccessful, is the invocation request
retransmitted.
Some tests may require the interface to be taken off-line in
order to execute them, or may even require the agent to
reboot after completion of the test.  In these
circumstances, communication with the management station
invoking the test may be lost until after completion of the
test.  An agent is not required to support such tests.
However, if such tests are supported, then the agent should
make every effort to transmit a response to the request
which invoked the test prior to losing communication.  When
the agent is restored to normal service, the results of the
test are properly made available in the appropriate objects.
Note that this requires that the ifIndex value assigned to
an interface must be unchanged even if the test causes a
reboot.  An agent must reject any test for which it cannot,
perhaps due to resource constraints, make available at least
the minimum amount of information after that test
completes."
::= { ifMIBObjects 3 }
ifTestEntry OBJECT-TYPE
SYNTAX       IfTestEntry
MAX-ACCESS   not-accessible
STATUS       deprecated
DESCRIPTION
"An entry containing objects for invoking tests on an
interface."
AUGMENTS  { ifEntry }
::= { ifTestTable 1 }
IfTestEntry ::=
SEQUENCE {
ifTestId           TestAndIncr,
ifTestStatus       INTEGER,
ifTestType         AutonomousType,
ifTestResult       INTEGER,
ifTestCode         OBJECT IDENTIFIER,
ifTestOwner        OwnerString
}
ifTestId         OBJECT-TYPE
SYNTAX       TestAndIncr
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object identifies the current invocation of the
interface's test."
::= { ifTestEntry 1 }
ifTestStatus     OBJECT-TYPE
SYNTAX       INTEGER { notInUse(1), inUse(2) }
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object indicates whether or not some manager currently
has the necessary 'ownership' required to invoke a test on
this interface.  A write to this object is only successful
when it changes its value from 'notInUse(1)' to 'inUse(2)'.
After completion of a test, the agent resets the value back
to 'notInUse(1)'."
::= { ifTestEntry 2 }
ifTestType       OBJECT-TYPE
SYNTAX       AutonomousType
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"A control variable used to start and stop operator-
initiated interface tests.  Most OBJECT IDENTIFIER values
assigned to tests are defined elsewhere, in association with
specific types of interface.  However, this document assigns
a value for a full-duplex loopback test, and defines the
special meanings of the subject identifier:
noTest  OBJECT IDENTIFIER ::= { 0 0 }
When the value noTest is written to this object, no action
is taken unless a test is in progress, in which case the
test is aborted.  Writing any other value to this object is
only valid when no test is currently in progress, in which
case the indicated test is initiated.
When read, this object always returns the most recent value
that ifTestType was set to.  If it has not been set since
the last initialization of the network management subsystem
on the agent, a value of noTest is returned."
::= { ifTestEntry 3 }
ifTestResult  OBJECT-TYPE
SYNTAX       INTEGER {
none(1),          -- no test yet requested
success(2),
inProgress(3),
notSupported(4),
unAbleToRun(5),   -- due to state of system
aborted(6),
failed(7)
}
MAX-ACCESS   read-only
STATUS       deprecated
DESCRIPTION
"This object contains the result of the most recently
requested test, or the value none(1) if no tests have been
requested since the last reset.  Note that this facility
provides no provision for saving the results of one test
when starting another, as could be required if used by
multiple managers concurrently."
::= { ifTestEntry 4 }
ifTestCode  OBJECT-TYPE
SYNTAX       OBJECT IDENTIFIER
MAX-ACCESS   read-only
STATUS       deprecated
DESCRIPTION
"This object contains a code which contains more specific
information on the test result, for example an error-code
after a failed test.  Error codes and other values this
object may take are specific to the type of interface and/or
test.  The value may have the semantics of either the
AutonomousType or InstancePointer textual conventions as
defined in RFC 2579.  The identifier:
testCodeUnknown  OBJECT IDENTIFIER ::= { 0 0 }
is defined for use if no additional result code is
available."
::= { ifTestEntry 5 }
ifTestOwner      OBJECT-TYPE
SYNTAX       OwnerString
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"The entity which currently has the 'ownership' required to
invoke a test on this interface."
::= { ifTestEntry 6 }
ifGeneralGroup    OBJECT-GROUP
OBJECTS { ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName }
STATUS  deprecated
DESCRIPTION
"A collection of objects deprecated in favour of
ifGeneralInformationGroup."
::= { ifGroups 1 }
ifTestGroup    OBJECT-GROUP
OBJECTS { ifTestId, ifTestStatus, ifTestType,
ifTestResult, ifTestCode, ifTestOwner }
STATUS  deprecated
DESCRIPTION
"A collection of objects providing the ability to invoke
tests on an interface."
::= { ifGroups 8 }
ifStackGroup    OBJECT-GROUP
OBJECTS { ifStackStatus }
STATUS  deprecated
DESCRIPTION
"The previous collection of objects providing information on
the layering of MIB-II interfaces."
::= { ifGroups 9 }

ifCompliance3 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which have
network interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup,
linkUpDownNotificationsGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second."
GROUP       ifVHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifCounterDiscontinuityGroup
DESCRIPTION
"This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory)."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 3 }
ifGeneralInformationGroup    OBJECT-GROUP
OBJECTS { ifIndex, ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName, ifNumber, ifAlias,
ifTableLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information applicable to
all network interfaces."
::= { ifGroups 10 }
ifFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) character-oriented or fixed-length-transmission
network interfaces."
::= { ifGroups 2 }
ifHCFixedLengthGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second) character-
oriented or fixed-length-transmission network interfaces."
::= { ifGroups 3 }
ifPacketGroup    OBJECT-GROUP
OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
non-high speed (non-high speed interfaces transmit and
receive at speeds less than or equal to 20,000,000
bits/second) packet-oriented network interfaces."
::= { ifGroups 4 }
ifHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
high speed (greater than 20,000,000 bits/second but less
than or equal to 650,000,000 bits/second) packet-oriented
network interfaces."
::= { ifGroups 5 }
ifVHCPacketGroup    OBJECT-GROUP
OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
ifHCInBroadcastPkts, ifHCOutUcastPkts,
ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
ifHCInOctets, ifHCOutOctets,
ifInOctets, ifOutOctets, ifInUnknownProtos,
ifInErrors, ifOutErrors,
ifMtu, ifInUcastPkts, ifInMulticastPkts,
ifInBroadcastPkts, ifInDiscards,
ifOutUcastPkts, ifOutMulticastPkts,
ifOutBroadcastPkts, ifOutDiscards,
ifPromiscuousMode }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
higher speed (greater than 650,000,000 bits/second) packet-
oriented network interfaces."
::= { ifGroups 6 }
ifRcvAddressGroup    OBJECT-GROUP
OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
multiple addresses which an interface receives."
::= { ifGroups 7 }
ifStackGroup2    OBJECT-GROUP
OBJECTS { ifStackStatus, ifStackLastChange }
STATUS  current
DESCRIPTION
"A collection of objects providing information on the
layering of MIB-II interfaces."
::= { ifGroups 11 }
ifCounterDiscontinuityGroup  OBJECT-GROUP
OBJECTS { ifCounterDiscontinuityTime }
STATUS  current
DESCRIPTION
"A collection of objects providing information specific to
interface counter discontinuities."
::= { ifGroups 13 }
linkUpDownNotificationsGroup  NOTIFICATION-GROUP
NOTIFICATIONS { linkUp, linkDown }
STATUS  current
DESCRIPTION
"The notifications which indicate specific changes in the
value of ifOperStatus."
::= { ifGroups 14 }
ifTestTable   OBJECT-TYPE
SYNTAX      SEQUENCE OF IfTestEntry
MAX-ACCESS  not-accessible
STATUS      deprecated
DESCRIPTION
"This table contains one entry per interface.  It defines
objects which allow a network manager to instruct an agent
to test an interface for various faults.  Tests for an
interface are defined in the media-specific MIB for that
interface.  After invoking a test, the object ifTestResult
can be read to determine the outcome.  If an agent can not
perform the test, ifTestResult is set to so indicate.  The
object ifTestCode can be used to provide further test-
specific or interface-specific (or even enterprise-specific)
information concerning the outcome of the test.  Only one
test can be in progress on each interface at any one time.
If one test is in progress when another test is invoked, the
second test is rejected.  Some agents may reject a test when
a prior test is active on another interface.
Before starting a test, a manager-station must first obtain
'ownership' of the entry in the ifTestTable for the
interface to be tested.  This is accomplished with the
ifTestId and ifTestStatus objects as follows:
try_again:
get (ifTestId, ifTestStatus)
while (ifTestStatus != notInUse)
/*
* Loop while a test is running or some other
* manager is configuring a test.
*/
short delay
get (ifTestId, ifTestStatus)
}
/*
* Is not being used right now -- let's compete
* to see who gets it.
*/
lock_value = ifTestId
if ( set(ifTestId = lock_value, ifTestStatus = inUse,
ifTestOwner = 'my-IP-address') == FAILURE)
/*
* Another manager got the ifTestEntry -- go
* try again
*/
goto try_again;
/*
* I have the lock
*/
set up any test parameters.
/*
* This starts the test
*/
set(ifTestType = test_to_run);
wait for test completion by polling ifTestResult
when test completes, agent sets ifTestResult
agent also sets ifTestStatus = 'notInUse'
retrieve any additional test results, and ifTestId
if (ifTestId == lock_value+1) results are valid
A manager station first retrieves the value of the
appropriate ifTestId and ifTestStatus objects, periodically
repeating the retrieval if necessary, until the value of
ifTestStatus is 'notInUse'.  The manager station then tries
to set the same ifTestId object to the value it just
retrieved, the same ifTestStatus object to 'inUse', and the
corresponding ifTestOwner object to a value indicating
itself.  If the set operation succeeds then the manager has
obtained ownership of the ifTestEntry, and the value of the
ifTestId object is incremented by the agent (per the
semantics of TestAndIncr).  Failure of the set operation
indicates that some other manager has obtained ownership of
the ifTestEntry.
Once ownership is obtained, any test parameters can be
setup, and then the test is initiated by setting ifTestType.
On completion of the test, the agent sets ifTestStatus to
'notInUse'.  Once this occurs, the manager can retrieve the
results.  In the (rare) event that the invocation of tests
by two network managers were to overlap, then there would be
a possibility that the first test's results might be
overwritten by the second test's results prior to the first
results being read.  This unlikely circumstance can be
detected by a network manager retrieving ifTestId at the
same time as retrieving the test results, and ensuring that
the results are for the desired request.
If ifTestType is not set within an abnormally long period of
time after ownership is obtained, the agent should time-out
the manager, and reset the value of the ifTestStatus object
back to 'notInUse'.  It is suggested that this time-out
period be 5 minutes.
In general, a management station must not retransmit a
request to invoke a test for which it does not receive a
response; instead, it properly inspects an agent's MIB to
determine if the invocation was successful.  Only if the
invocation was unsuccessful, is the invocation request
retransmitted.
Some tests may require the interface to be taken off-line in
order to execute them, or may even require the agent to
reboot after completion of the test.  In these
circumstances, communication with the management station
invoking the test may be lost until after completion of the
test.  An agent is not required to support such tests.
However, if such tests are supported, then the agent should
make every effort to transmit a response to the request
which invoked the test prior to losing communication.  When
the agent is restored to normal service, the results of the
test are properly made available in the appropriate objects.
Note that this requires that the ifIndex value assigned to
an interface must be unchanged even if the test causes a
reboot.  An agent must reject any test for which it cannot,
perhaps due to resource constraints, make available at least
the minimum amount of information after that test
completes."
::= { ifMIBObjects 3 }
ifTestEntry OBJECT-TYPE
SYNTAX       IfTestEntry
MAX-ACCESS   not-accessible
STATUS       deprecated
DESCRIPTION
"An entry containing objects for invoking tests on an
interface."
AUGMENTS  { ifEntry }
::= { ifTestTable 1 }
IfTestEntry ::=
SEQUENCE {
ifTestId           TestAndIncr,
ifTestStatus       INTEGER,
ifTestType         AutonomousType,
ifTestResult       INTEGER,
ifTestCode         OBJECT IDENTIFIER,
ifTestOwner        OwnerString
}
ifTestId         OBJECT-TYPE
SYNTAX       TestAndIncr
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object identifies the current invocation of the
interface's test."
::= { ifTestEntry 1 }
ifTestStatus     OBJECT-TYPE
SYNTAX       INTEGER { notInUse(1), inUse(2) }
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"This object indicates whether or not some manager currently
has the necessary 'ownership' required to invoke a test on
this interface.  A write to this object is only successful
when it changes its value from 'notInUse(1)' to 'inUse(2)'.
After completion of a test, the agent resets the value back
to 'notInUse(1)'."
::= { ifTestEntry 2 }
ifTestType       OBJECT-TYPE
SYNTAX       AutonomousType
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"A control variable used to start and stop operator-
initiated interface tests.  Most OBJECT IDENTIFIER values
assigned to tests are defined elsewhere, in association with
specific types of interface.  However, this document assigns
a value for a full-duplex loopback test, and defines the
special meanings of the subject identifier:
noTest  OBJECT IDENTIFIER ::= { 0 0 }
When the value noTest is written to this object, no action
is taken unless a test is in progress, in which case the
test is aborted.  Writing any other value to this object is
only valid when no test is currently in progress, in which
case the indicated test is initiated.
When read, this object always returns the most recent value
that ifTestType was set to.  If it has not been set since
the last initialization of the network management subsystem
on the agent, a value of noTest is returned."
::= { ifTestEntry 3 }
ifTestResult  OBJECT-TYPE
SYNTAX       INTEGER {
none(1),          -- no test yet requested
success(2),
inProgress(3),
notSupported(4),
unAbleToRun(5),   -- due to state of system
aborted(6),
failed(7)
}
MAX-ACCESS   read-only
STATUS       deprecated
DESCRIPTION
"This object contains the result of the most recently
requested test, or the value none(1) if no tests have been
requested since the last reset.  Note that this facility
provides no provision for saving the results of one test
when starting another, as could be required if used by
multiple managers concurrently."
::= { ifTestEntry 4 }
ifTestCode  OBJECT-TYPE
SYNTAX       OBJECT IDENTIFIER
MAX-ACCESS   read-only
STATUS       deprecated
DESCRIPTION
"This object contains a code which contains more specific
information on the test result, for example an error-code
after a failed test.  Error codes and other values this
object may take are specific to the type of interface and/or
test.  The value may have the semantics of either the
AutonomousType or InstancePointer textual conventions as
defined in RFC 2579.  The identifier:
testCodeUnknown  OBJECT IDENTIFIER ::= { 0 0 }
is defined for use if no additional result code is
available."
::= { ifTestEntry 5 }
ifTestOwner      OBJECT-TYPE
SYNTAX       OwnerString
MAX-ACCESS   read-write
STATUS       deprecated
DESCRIPTION
"The entity which currently has the 'ownership' required to
invoke a test on this interface."
::= { ifTestEntry 6 }
ifGeneralGroup    OBJECT-GROUP
OBJECTS { ifDescr, ifType, ifSpeed, ifPhysAddress,
ifAdminStatus, ifOperStatus, ifLastChange,
ifLinkUpDownTrapEnable, ifConnectorPresent,
ifHighSpeed, ifName }
STATUS  deprecated
DESCRIPTION
"A collection of objects deprecated in favour of
ifGeneralInformationGroup."
::= { ifGroups 1 }
ifTestGroup    OBJECT-GROUP
OBJECTS { ifTestId, ifTestStatus, ifTestType,
ifTestResult, ifTestCode, ifTestOwner }
STATUS  deprecated
DESCRIPTION
"A collection of objects providing the ability to invoke
tests on an interface."
::= { ifGroups 8 }
ifStackGroup    OBJECT-GROUP
OBJECTS { ifStackStatus }
STATUS  deprecated
DESCRIPTION
"The previous collection of objects providing information on
the layering of MIB-II interfaces."
::= { ifGroups 9 }
ifOldObjectsGroup    OBJECT-GROUP
OBJECTS { ifInNUcastPkts, ifOutNUcastPkts,
ifOutQLen, ifSpecific }
STATUS  deprecated
DESCRIPTION
"The collection of objects deprecated from the original MIB-
II interfaces group."
::= { ifGroups 12 }

#----------------------------------- MODULE COMPLIANCE  ifCompliance  ---------------------------#
Tipo de objeto: MODULE-COMPLIANCE
Nombre del objeto: ifCompliance
ifCompliance MODULE-COMPLIANCE
STATUS  deprecated
DESCRIPTION
"A compliance statement defined in a previous version of
this MIB module, for SNMP entities which have network
interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralGroup, ifStackGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for all network interfaces which
are character-oriented or transmit data in fixed-length
transmission units."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are character-oriented or transmit data in fixed-
length transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for all network interfaces which
are packet-oriented."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifTestGroup
DESCRIPTION
"This group is optional.  Media-specific MIBs which require
interface tests are strongly encouraged to use this group
for invoking tests and reporting results.  A medium specific
MIB which has mandatory tests may make implementation of
this group mandatory."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifStackStatus
SYNTAX      INTEGER { active(1) } -- subset of RowStatus
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required, and only one of the six
enumerated values for the RowStatus textual convention need
be supported, specifically: active(1)."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
::= { ifCompliances 1 }

#----------------------------------- MODULE COMPLIANCE  ifCompliance2  ---------------------------#
Tipo de objeto: MODULE-COMPLIANCE
Nombre del objeto: ifCompliance2
ifCompliance2 MODULE-COMPLIANCE
STATUS      deprecated
DESCRIPTION
"A compliance statement defined in a previous version of
this MIB module, for SNMP entities which have network
interfaces."
MODULE  -- this module
MANDATORY-GROUPS { ifGeneralInformationGroup, ifStackGroup2,
ifCounterDiscontinuityGroup }
GROUP       ifFixedLengthGroup
DESCRIPTION
"This group is mandatory for all network interfaces which
are character-oriented or transmit data in fixed-length
transmission units."
GROUP       ifHCFixedLengthGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are character-oriented or transmit data in fixed-
length transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second."
GROUP       ifPacketGroup
DESCRIPTION
"This group is mandatory for all network interfaces which
are packet-oriented."
GROUP       ifHCPacketGroup
DESCRIPTION
"This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second."
GROUP       ifRcvAddressGroup
DESCRIPTION
"The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group."
OBJECT      ifLinkUpDownTrapEnable
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifPromiscuousMode
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required."
OBJECT      ifStackStatus
SYNTAX      INTEGER { active(1) } -- subset of RowStatus
MIN-ACCESS  read-only
DESCRIPTION
"Write access is not required, and only one of the six
enumerated values for the RowStatus textual convention need
be supported, specifically: active(1)."
OBJECT       ifAdminStatus
SYNTAX       INTEGER { up(1), down(2) }
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required, nor is support for the value
testing(3)."
OBJECT       ifAlias
MIN-ACCESS   read-only
DESCRIPTION
"Write access is not required."
::= { ifCompliances 2 }

#----------------------------------- MODULE COMPLIANCE  snmpTargetCommandResponderCompliance  ---------------------------#
Tipo de objeto: MODULE-COMPLIANCE
Nombre del objeto: snmpTargetCommandResponderCompliance
snmpTargetCommandResponderCompliance MODULE-COMPLIANCE
STATUS      current
DESCRIPTION
"The compliance statement for SNMP entities which include
a command responder application."
MODULE -- This Module
MANDATORY-GROUPS { snmpTargetCommandResponderGroup }
::= { snmpTargetCompliances 1 }

snmpTargetCommandResponderCompliance MODULE-COMPLIANCE
STATUS      current
DESCRIPTION
"The compliance statement for SNMP entities which include
a command responder application."
MODULE -- This Module
MANDATORY-GROUPS { snmpTargetCommandResponderGroup }
::= { snmpTargetCompliances 1 }
snmpTargetBasicGroup OBJECT-GROUP
OBJECTS {
snmpTargetSpinLock,
snmpTargetAddrTDomain,
snmpTargetAddrTAddress,
snmpTargetAddrTagList,
snmpTargetAddrParams,
snmpTargetAddrStorageType,
snmpTargetAddrRowStatus,
snmpTargetParamsMPModel,
snmpTargetParamsSecurityModel,
snmpTargetParamsSecurityName,
snmpTargetParamsSecurityLevel,
snmpTargetParamsStorageType,
snmpTargetParamsRowStatus
}
STATUS      current
DESCRIPTION
"A collection of objects providing basic remote
configuration of management targets."
::= { snmpTargetGroups 1 }

snmpTargetCommandResponderCompliance MODULE-COMPLIANCE
STATUS      current
DESCRIPTION
"The compliance statement for SNMP entities which include
a command responder application."
MODULE -- This Module
MANDATORY-GROUPS { snmpTargetCommandResponderGroup }
::= { snmpTargetCompliances 1 }
snmpTargetBasicGroup OBJECT-GROUP
OBJECTS {
snmpTargetSpinLock,
snmpTargetAddrTDomain,
snmpTargetAddrTAddress,
snmpTargetAddrTagList,
snmpTargetAddrParams,
snmpTargetAddrStorageType,
snmpTargetAddrRowStatus,
snmpTargetParamsMPModel,
snmpTargetParamsSecurityModel,
snmpTargetParamsSecurityName,
snmpTargetParamsSecurityLevel,
snmpTargetParamsStorageType,
snmpTargetParamsRowStatus
}
STATUS      current
DESCRIPTION
"A collection of objects providing basic remote
configuration of management targets."
::= { snmpTargetGroups 1 }
snmpTargetResponseGroup OBJECT-GROUP
OBJECTS {
snmpTargetAddrTimeout,
snmpTargetAddrRetryCount
}
STATUS      current
DESCRIPTION
"A collection of objects providing remote configuration
of management targets for applications which generate
SNMP messages for which a response message would be
expected."
::= { snmpTargetGroups 2 }

snmpTargetCommandResponderCompliance MODULE-COMPLIANCE
STATUS      current
DESCRIPTION
"The compliance statement for SNMP entities which include
a command responder application."
MODULE -- This Module
MANDATORY-GROUPS { snmpTargetCommandResponderGroup }
::= { snmpTargetCompliances 1 }
snmpTargetBasicGroup OBJECT-GROUP
OBJECTS {
snmpTargetSpinLock,
snmpTargetAddrTDomain,
snmpTargetAddrTAddress,
snmpTargetAddrTagList,
snmpTargetAddrParams,
snmpTargetAddrStorageType,
snmpTargetAddrRowStatus,
snmpTargetParamsMPModel,
snmpTargetParamsSecurityModel,
snmpTargetParamsSecurityName,
snmpTargetParamsSecurityLevel,
snmpTargetParamsStorageType,
snmpTargetParamsRowStatus
}
STATUS      current
DESCRIPTION
"A collection of objects providing basic remote
configuration of management targets."
::= { snmpTargetGroups 1 }
snmpTargetResponseGroup OBJECT-GROUP
OBJECTS {
snmpTargetAddrTimeout,
snmpTargetAddrRetryCount
}
STATUS      current
DESCRIPTION
"A collection of objects providing remote configuration
of management targets for applications which generate
SNMP messages for which a response message would be
expected."
::= { snmpTargetGroups 2 }
snmpTargetCommandResponderGroup OBJECT-GROUP
OBJECTS {
snmpUnavailableContexts,
snmpUnknownContexts
}
STATUS      current
DESCRIPTION
"A collection of objects required for command responder
applications, used for counting error conditions."
::= { snmpTargetGroups 3 }

#----------------------------------- MODULE COMPLIANCE  snmpBasicCompliance  ---------------------------#
Tipo de objeto: MODULE-COMPLIANCE
Nombre del objeto: snmpBasicCompliance
snmpBasicCompliance MODULE-COMPLIANCE
STATUS  deprecated
DESCRIPTION
"The compliance statement for SNMPv2 entities which
implement the SNMPv2 MIB.
This compliance statement is replaced by
snmpBasicComplianceRev2."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMPv2 entities which
support community-based authentication."
::= { snmpMIBCompliances 2 }

#----------------------------------- MODULE COMPLIANCE  snmpBasicComplianceRev2  ---------------------------#
Tipo de objeto: MODULE-COMPLIANCE
Nombre del objeto: snmpBasicComplianceRev2
snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }
snmpInTotalReqVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs."
::= { snmp 13 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }
snmpInTotalReqVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs."
::= { snmp 13 }
snmpInTotalSetVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
altered successfully by the SNMP protocol entity as
the result of receiving valid SNMP Set-Request PDUs."
::= { snmp 14 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }
snmpInTotalReqVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs."
::= { snmp 13 }
snmpInTotalSetVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
altered successfully by the SNMP protocol entity as
the result of receiving valid SNMP Set-Request PDUs."
::= { snmp 14 }
snmpInGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been accepted and processed by the SNMP
protocol entity."
::= { snmp 15 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }
snmpInTotalReqVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs."
::= { snmp 13 }
snmpInTotalSetVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
altered successfully by the SNMP protocol entity as
the result of receiving valid SNMP Set-Request PDUs."
::= { snmp 14 }
snmpInGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been accepted and processed by the SNMP
protocol entity."
::= { snmp 15 }
snmpInGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 16 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }
snmpInTotalReqVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs."
::= { snmp 13 }
snmpInTotalSetVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
altered successfully by the SNMP protocol entity as
the result of receiving valid SNMP Set-Request PDUs."
::= { snmp 14 }
snmpInGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been accepted and processed by the SNMP
protocol entity."
::= { snmp 15 }
snmpInGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 16 }
snmpInSetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Set-Request PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 17 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }
snmpInTotalReqVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs."
::= { snmp 13 }
snmpInTotalSetVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
altered successfully by the SNMP protocol entity as
the result of receiving valid SNMP Set-Request PDUs."
::= { snmp 14 }
snmpInGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been accepted and processed by the SNMP
protocol entity."
::= { snmp 15 }
snmpInGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 16 }
snmpInSetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Set-Request PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 17 }
snmpInGetResponses OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Response PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 18 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }
snmpInTotalReqVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs."
::= { snmp 13 }
snmpInTotalSetVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
altered successfully by the SNMP protocol entity as
the result of receiving valid SNMP Set-Request PDUs."
::= { snmp 14 }
snmpInGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been accepted and processed by the SNMP
protocol entity."
::= { snmp 15 }
snmpInGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 16 }
snmpInSetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Set-Request PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 17 }
snmpInGetResponses OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Response PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 18 }
snmpInTraps OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Trap PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 19 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }
snmpInTotalReqVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs."
::= { snmp 13 }
snmpInTotalSetVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
altered successfully by the SNMP protocol entity as
the result of receiving valid SNMP Set-Request PDUs."
::= { snmp 14 }
snmpInGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been accepted and processed by the SNMP
protocol entity."
::= { snmp 15 }
snmpInGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 16 }
snmpInSetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Set-Request PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 17 }
snmpInGetResponses OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Response PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 18 }
snmpInTraps OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Trap PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 19 }
snmpOutTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `tooBig.'"
::= { snmp 20 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }
snmpInTotalReqVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs."
::= { snmp 13 }
snmpInTotalSetVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
altered successfully by the SNMP protocol entity as
the result of receiving valid SNMP Set-Request PDUs."
::= { snmp 14 }
snmpInGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been accepted and processed by the SNMP
protocol entity."
::= { snmp 15 }
snmpInGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 16 }
snmpInSetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Set-Request PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 17 }
snmpInGetResponses OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Response PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 18 }
snmpInTraps OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Trap PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 19 }
snmpOutTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `tooBig.'"
::= { snmp 20 }
snmpOutNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status was `noSuchName'."
::= { snmp 21 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }
snmpInTotalReqVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs."
::= { snmp 13 }
snmpInTotalSetVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
altered successfully by the SNMP protocol entity as
the result of receiving valid SNMP Set-Request PDUs."
::= { snmp 14 }
snmpInGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been accepted and processed by the SNMP
protocol entity."
::= { snmp 15 }
snmpInGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 16 }
snmpInSetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Set-Request PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 17 }
snmpInGetResponses OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Response PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 18 }
snmpInTraps OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Trap PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 19 }
snmpOutTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `tooBig.'"
::= { snmp 20 }
snmpOutNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status was `noSuchName'."
::= { snmp 21 }
snmpOutBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `badValue'."
::= { snmp 22 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }
snmpInTotalReqVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs."
::= { snmp 13 }
snmpInTotalSetVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
altered successfully by the SNMP protocol entity as
the result of receiving valid SNMP Set-Request PDUs."
::= { snmp 14 }
snmpInGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been accepted and processed by the SNMP
protocol entity."
::= { snmp 15 }
snmpInGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 16 }
snmpInSetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Set-Request PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 17 }
snmpInGetResponses OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Response PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 18 }
snmpInTraps OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Trap PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 19 }
snmpOutTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `tooBig.'"
::= { snmp 20 }
snmpOutNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status was `noSuchName'."
::= { snmp 21 }
snmpOutBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `badValue'."
::= { snmp 22 }
snmpOutGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 24 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }
snmpInTotalReqVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs."
::= { snmp 13 }
snmpInTotalSetVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
altered successfully by the SNMP protocol entity as
the result of receiving valid SNMP Set-Request PDUs."
::= { snmp 14 }
snmpInGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been accepted and processed by the SNMP
protocol entity."
::= { snmp 15 }
snmpInGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 16 }
snmpInSetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Set-Request PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 17 }
snmpInGetResponses OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Response PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 18 }
snmpInTraps OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Trap PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 19 }
snmpOutTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `tooBig.'"
::= { snmp 20 }
snmpOutNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status was `noSuchName'."
::= { snmp 21 }
snmpOutBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `badValue'."
::= { snmp 22 }
snmpOutGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 24 }
snmpOutGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been generated by the SNMP protocol entity."
::= { snmp 25 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }
snmpInTotalReqVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs."
::= { snmp 13 }
snmpInTotalSetVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
altered successfully by the SNMP protocol entity as
the result of receiving valid SNMP Set-Request PDUs."
::= { snmp 14 }
snmpInGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been accepted and processed by the SNMP
protocol entity."
::= { snmp 15 }
snmpInGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 16 }
snmpInSetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Set-Request PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 17 }
snmpInGetResponses OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Response PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 18 }
snmpInTraps OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Trap PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 19 }
snmpOutTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `tooBig.'"
::= { snmp 20 }
snmpOutNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status was `noSuchName'."
::= { snmp 21 }
snmpOutBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `badValue'."
::= { snmp 22 }
snmpOutGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 24 }
snmpOutGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been generated by the SNMP protocol entity."
::= { snmp 25 }
snmpOutGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have
been generated by the SNMP protocol entity."
::= { snmp 26 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }
snmpInTotalReqVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs."
::= { snmp 13 }
snmpInTotalSetVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
altered successfully by the SNMP protocol entity as
the result of receiving valid SNMP Set-Request PDUs."
::= { snmp 14 }
snmpInGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been accepted and processed by the SNMP
protocol entity."
::= { snmp 15 }
snmpInGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 16 }
snmpInSetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Set-Request PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 17 }
snmpInGetResponses OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Response PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 18 }
snmpInTraps OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Trap PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 19 }
snmpOutTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `tooBig.'"
::= { snmp 20 }
snmpOutNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status was `noSuchName'."
::= { snmp 21 }
snmpOutBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `badValue'."
::= { snmp 22 }
snmpOutGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 24 }
snmpOutGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been generated by the SNMP protocol entity."
::= { snmp 25 }
snmpOutGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have
been generated by the SNMP protocol entity."
::= { snmp 26 }
snmpOutSetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Set-Request PDUs which
have been generated by the SNMP protocol entity."
::= { snmp 27 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }
snmpInTotalReqVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs."
::= { snmp 13 }
snmpInTotalSetVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
altered successfully by the SNMP protocol entity as
the result of receiving valid SNMP Set-Request PDUs."
::= { snmp 14 }
snmpInGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been accepted and processed by the SNMP
protocol entity."
::= { snmp 15 }
snmpInGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 16 }
snmpInSetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Set-Request PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 17 }
snmpInGetResponses OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Response PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 18 }
snmpInTraps OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Trap PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 19 }
snmpOutTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `tooBig.'"
::= { snmp 20 }
snmpOutNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status was `noSuchName'."
::= { snmp 21 }
snmpOutBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `badValue'."
::= { snmp 22 }
snmpOutGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 24 }
snmpOutGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been generated by the SNMP protocol entity."
::= { snmp 25 }
snmpOutGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have
been generated by the SNMP protocol entity."
::= { snmp 26 }
snmpOutSetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Set-Request PDUs which
have been generated by the SNMP protocol entity."
::= { snmp 27 }
snmpOutGetResponses OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Response PDUs which
have been generated by the SNMP protocol entity."
::= { snmp 28 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }
snmpInTotalReqVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs."
::= { snmp 13 }
snmpInTotalSetVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
altered successfully by the SNMP protocol entity as
the result of receiving valid SNMP Set-Request PDUs."
::= { snmp 14 }
snmpInGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been accepted and processed by the SNMP
protocol entity."
::= { snmp 15 }
snmpInGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 16 }
snmpInSetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Set-Request PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 17 }
snmpInGetResponses OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Response PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 18 }
snmpInTraps OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Trap PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 19 }
snmpOutTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `tooBig.'"
::= { snmp 20 }
snmpOutNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status was `noSuchName'."
::= { snmp 21 }
snmpOutBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `badValue'."
::= { snmp 22 }
snmpOutGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 24 }
snmpOutGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been generated by the SNMP protocol entity."
::= { snmp 25 }
snmpOutGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have
been generated by the SNMP protocol entity."
::= { snmp 26 }
snmpOutSetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Set-Request PDUs which
have been generated by the SNMP protocol entity."
::= { snmp 27 }
snmpOutGetResponses OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Response PDUs which
have been generated by the SNMP protocol entity."
::= { snmp 28 }
snmpOutTraps OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Trap PDUs which have
been generated by the SNMP protocol entity."
::= { snmp 29 }

snmpBasicComplianceRev2 MODULE-COMPLIANCE
STATUS  current
DESCRIPTION
"The compliance statement for SNMP entities which
implement this MIB module."
MODULE  -- this module
MANDATORY-GROUPS { snmpGroup, snmpSetGroup, systemGroup,
snmpBasicNotificationsGroup }
GROUP   snmpCommunityGroup1
DESCRIPTION
"This group is mandatory for SNMP entities which
support community-based authentication."
GROUP   snmpWarmStartNotificationGroup
DESCRIPTION
"This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered."
::= { snmpMIBCompliances 3 }
snmpGroup OBJECT-GROUP
OBJECTS { snmpInPkts,
snmpInBadVersions,
snmpInASNParseErrs,
snmpSilentDrops,
snmpProxyDrops,
snmpEnableAuthenTraps }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
and control of an SNMP entity."
::= { snmpMIBGroups 8 }
snmpCommunityGroup1 OBJECT-GROUP
OBJECTS { snmpInBadCommunityNames,
snmpInBadCommunityUses }
STATUS  current
DESCRIPTION
"A collection of objects providing basic instrumentation
of a SNMP entity which supports community-based
authentication."
::= { snmpMIBGroups 9 }
snmpSetGroup OBJECT-GROUP
OBJECTS { snmpSetSerialNo }
STATUS  current
DESCRIPTION
"A collection of objects which allow several cooperating
command generator applications to coordinate their
use of the set operation."
::= { snmpMIBGroups 5 }
systemGroup OBJECT-GROUP
OBJECTS { sysDescr, sysObjectID, sysUpTime,
sysContact, sysName, sysLocation,
sysServices,
sysORLastChange, sysORID,
sysORUpTime, sysORDescr }
STATUS  current
DESCRIPTION
"The system group defines objects which are common to all
managed systems."
::= { snmpMIBGroups 6 }
snmpBasicNotificationsGroup NOTIFICATION-GROUP
NOTIFICATIONS { coldStart, authenticationFailure }
STATUS        current
DESCRIPTION
"The basic notifications implemented by an SNMP entity
supporting command responder applications."
::= { snmpMIBGroups 7 }
snmpWarmStartNotificationGroup NOTIFICATION-GROUP
NOTIFICATIONS { warmStart }
STATUS        current
DESCRIPTION
"An additional notification for an SNMP entity supporting
command responder applications, if it is able to reinitialize
itself such that its configuration is unaltered."
::= { snmpMIBGroups 11 }
snmpNotificationGroup OBJECT-GROUP
OBJECTS { snmpTrapOID, snmpTrapEnterprise }
STATUS  current
DESCRIPTION
"These objects are required for entities
which support notification originator applications."
::= { snmpMIBGroups 12 }
snmpOutPkts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Messages which were
passed from the SNMP protocol entity to the
transport service."
::= { snmp 2 }
snmpInTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`tooBig'."
::= { snmp 8 }
snmpInNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`noSuchName'."
::= { snmp 9 }
snmpInBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were
delivered to the SNMP protocol entity and for
which the value of the error-status field was
`badValue'."
::= { snmp 10 }
snmpInReadOnlys OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number valid SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `readOnly'.  It should
be noted that it is a protocol error to generate an
SNMP PDU which contains the value `readOnly' in the
error-status field, as such this object is provided
as a means of detecting incorrect implementations of
the SNMP."
::= { snmp 11 }
snmpInGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were delivered
to the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 12 }
snmpInTotalReqVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
retrieved successfully by the SNMP protocol entity
as the result of receiving valid SNMP Get-Request
and Get-Next PDUs."
::= { snmp 13 }
snmpInTotalSetVars OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of MIB objects which have been
altered successfully by the SNMP protocol entity as
the result of receiving valid SNMP Set-Request PDUs."
::= { snmp 14 }
snmpInGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been accepted and processed by the SNMP
protocol entity."
::= { snmp 15 }
snmpInGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 16 }
snmpInSetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Set-Request PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 17 }
snmpInGetResponses OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Response PDUs which
have been accepted and processed by the SNMP protocol
entity."
::= { snmp 18 }
snmpInTraps OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Trap PDUs which have been
accepted and processed by the SNMP protocol entity."
::= { snmp 19 }
snmpOutTooBigs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `tooBig.'"
::= { snmp 20 }
snmpOutNoSuchNames OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status was `noSuchName'."
::= { snmp 21 }
snmpOutBadValues OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `badValue'."
::= { snmp 22 }
snmpOutGenErrs OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP PDUs which were generated
by the SNMP protocol entity and for which the value
of the error-status field was `genErr'."
::= { snmp 24 }
snmpOutGetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Request PDUs which
have been generated by the SNMP protocol entity."
::= { snmp 25 }
snmpOutGetNexts OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Next PDUs which have
been generated by the SNMP protocol entity."
::= { snmp 26 }
snmpOutSetRequests OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Set-Request PDUs which
have been generated by the SNMP protocol entity."
::= { snmp 27 }
snmpOutGetResponses OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Get-Response PDUs which
have been generated by the SNMP protocol entity."
::= { snmp 28 }
snmpOutTraps OBJECT-TYPE
SYNTAX      Counter32
MAX-ACCESS  read-only
STATUS      obsolete
DESCRIPTION
"The total number of SNMP Trap PDUs which have
been generated by the SNMP protocol entity."
::= { snmp 29 }
snmpObsoleteGroup OBJECT-GROUP
OBJECTS { snmpOutPkts, snmpInTooBigs, snmpInNoSuchNames,
snmpInBadValues, snmpInReadOnlys, snmpInGenErrs,
snmpInTotalReqVars, snmpInTotalSetVars,
snmpInGetRequests, snmpInGetNexts, snmpInSetRequests,
snmpInGetResponses, snmpInTraps, snmpOutTooBigs,
snmpOutNoSuchNames, snmpOutBadValues,
snmpOutGenErrs, snmpOutGetRequests, snmpOutGetNexts,
snmpOutSetRequests, snmpOutGetResponses, snmpOutTraps
}
STATUS  obsolete
DESCRIPTION
"A collection of objects from RFC 1213 made obsolete
by this MIB module."
::= { snmpMIBGroups 10 }

#----------------------------------- MODULE COMPLIANCE  snmpFrameworkMIBCompliance  ---------------------------#
Tipo de objeto: MODULE-COMPLIANCE
Nombre del objeto: snmpFrameworkMIBCompliance
snmpFrameworkMIBCompliance MODULE-COMPLIANCE
STATUS          current
DESCRIPTION     
"The compliance statement for SNMP engines which
implement the SNMP Management Framework MIB.
"
MODULE          -- this module
MANDATORY-GROUPS    { snmpEngineGroup }
::= { snmpFrameworkMIBCompliances 1 }

----------------------------------- ifCompliance ---------------------------
ifCompliance:
  ARCHIVO: IF-MIB.mib
  OID:  ifCompliances 1 
  DESCRIPTION: A compliance statement defined in a previous version of
this MIB module, for SNMP entities which have network
interfaces.
  TYPE: MODULE-COMPLIANCE
  STATUS: deprecated
  MODULE:
    GROUPS:
      GROUP: ifFixedLengthGroup
      DESCRIPTION: This group is mandatory for all network interfaces which
are character-oriented or transmit data in fixed-length
transmission units.
      GROUP: ifHCFixedLengthGroup
      DESCRIPTION: This group is mandatory only for those network interfaces
which are character-oriented or transmit data in fixed-
length transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second.
      GROUP: ifPacketGroup
      DESCRIPTION: This group is mandatory for all network interfaces which
are packet-oriented.
      GROUP: ifHCPacketGroup
      DESCRIPTION: This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second.
      GROUP: ifTestGroup
      DESCRIPTION: This group is optional.  Media-specific MIBs which require
interface tests are strongly encouraged to use this group
for invoking tests and reporting results.  A medium specific
MIB which has mandatory tests may make implementation of
this group mandatory.
      GROUP: ifRcvAddressGroup
      DESCRIPTION: The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group.
    OBJECTS:
      OBJECT: ifLinkUpDownTrapEnable
      SYNTAX: undef
      MIN_ACCESS: read-only
      DESCRIPTION: Write access is not required.
      OBJECT: ifPromiscuousMode
      SYNTAX: undef
      MIN_ACCESS: read-only
      DESCRIPTION: Write access is not required.
----------------------------------- Final de segmento -----------------------------------
----------------------------------- snmpBasicComplianceRev2 ---------------------------
snmpBasicComplianceRev2:
  ARCHIVO: SNMPv2-MIB.mib
  OID:  snmpMIBCompliances 3 
  DESCRIPTION: The compliance statement for SNMP entities which
implement this MIB module.
  TYPE: MODULE-COMPLIANCE
  STATUS: current
  MODULE:
    GROUPS:
      GROUP: snmpCommunityGroup1
      DESCRIPTION: This group is mandatory for SNMP entities which
support community-based authentication.
      GROUP: snmpWarmStartNotificationGroup
      DESCRIPTION: This group is mandatory for an SNMP entity which
supports command responder applications, and is
able to reinitialize itself such that its
configuration is unaltered.
    OBJECTS:
----------------------------------- Final de segmento -----------------------------------
----------------------------------- snmpTargetCommandResponderCompliance ---------------------------
snmpTargetCommandResponderCompliance:
  ARCHIVO: SNMP-TARGET-MIB.mib
  OID:  snmpTargetCompliances 1 
  DESCRIPTION: The compliance statement for SNMP entities which include
a command responder application.
  TYPE: MODULE-COMPLIANCE
  STATUS: current
----------------------------------- Final de segmento -----------------------------------
----------------------------------- snmpBasicCompliance ---------------------------
snmpBasicCompliance:
  ARCHIVO: SNMPv2-MIB.mib
  OID:  snmpMIBCompliances 2 
  DESCRIPTION: The compliance statement for SNMPv2 entities which
implement the SNMPv2 MIB.
This compliance statement is replaced by
snmpBasicComplianceRev2.
  TYPE: MODULE-COMPLIANCE
  STATUS: deprecated
  MODULE:
    GROUPS:
      GROUP: snmpCommunityGroup1
      DESCRIPTION: This group is mandatory for SNMPv2 entities which
support community-based authentication.
    OBJECTS:
----------------------------------- Final de segmento -----------------------------------
----------------------------------- snmpFrameworkMIBCompliance ---------------------------
snmpFrameworkMIBCompliance:
  ARCHIVO: SNMP-FRAMEWORK-MIB
  OID:  snmpFrameworkMIBCompliances 1 
  DESCRIPTION: The compliance statement for SNMP engines which
implement the SNMP Management Framework MIB.

  TYPE: MODULE-COMPLIANCE
  STATUS: current
  MODULE:
    GROUPS:
    OBJECTS:
----------------------------------- Final de segmento -----------------------------------
----------------------------------- ifCompliance2 ---------------------------
ifCompliance2:
  ARCHIVO: IF-MIB.mib
  OID:  ifCompliances 2 
  DESCRIPTION: A compliance statement defined in a previous version of
this MIB module, for SNMP entities which have network
interfaces.
  TYPE: MODULE-COMPLIANCE
  STATUS: deprecated
  MODULE:
    GROUPS:
      GROUP: ifFixedLengthGroup
      DESCRIPTION: This group is mandatory for all network interfaces which
are character-oriented or transmit data in fixed-length
transmission units.
      GROUP: ifHCFixedLengthGroup
      DESCRIPTION: This group is mandatory only for those network interfaces
which are character-oriented or transmit data in fixed-
length transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second.
      GROUP: ifPacketGroup
      DESCRIPTION: This group is mandatory for all network interfaces which
are packet-oriented.
      GROUP: ifHCPacketGroup
      DESCRIPTION: This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second.
      GROUP: ifRcvAddressGroup
      DESCRIPTION: The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group.
    OBJECTS:
      OBJECT: ifLinkUpDownTrapEnable
      SYNTAX: undef
      MIN_ACCESS: read-only
      DESCRIPTION: Write access is not required.
      OBJECT: ifPromiscuousMode
      SYNTAX: undef
      MIN_ACCESS: read-only
      DESCRIPTION: Write access is not required.
      OBJECT: ifAlias
      SYNTAX: undef
      MIN_ACCESS: read-only
      DESCRIPTION: Write access is not required.
----------------------------------- Final de segmento -----------------------------------
----------------------------------- hrMIBCompliance ---------------------------
hrMIBCompliance:
  ARCHIVO: HOST-RESOURCES-MIB.mib
  OID:  hrMIBCompliances 1 
  DESCRIPTION: The requirements for conformance to the Host Resources MIB.
  TYPE: MODULE-COMPLIANCE
  STATUS: current
  MODULE:
    GROUPS:
      GROUP: hrSWRunGroup
      DESCRIPTION: The Running Software Group. Implementation
of this group is mandatory only when the
hrSWRunPerfGroup is implemented.
      GROUP: hrSWRunPerfGroup
      DESCRIPTION: The Running Software Performance Group.
Implementation of this group is at the discretion
of the implementor.
      GROUP: hrSWInstalledGroup
      DESCRIPTION: The Installed Software Group.
Implementation of this group is at the discretion
of the implementor.
    OBJECTS:
      OBJECT: hrSystemDate
      SYNTAX: undef
      MIN_ACCESS: read-only
      DESCRIPTION: Write access is not required.
      OBJECT: hrSystemInitialLoadDevice
      SYNTAX: undef
      MIN_ACCESS: read-only
      DESCRIPTION: Write access is not required.
      OBJECT: hrSystemInitialLoadParameters
      SYNTAX: undef
      MIN_ACCESS: read-only
      DESCRIPTION: Write access is not required.
      OBJECT: hrStorageSize
      SYNTAX: undef
      MIN_ACCESS: read-only
      DESCRIPTION: Write access is not required.
      OBJECT: hrFSLastFullBackupDate
      SYNTAX: undef
      MIN_ACCESS: read-only
      DESCRIPTION: Write access is not required.
      OBJECT: hrFSLastPartialBackupDate
      SYNTAX: undef
      MIN_ACCESS: read-only
      DESCRIPTION: Write access is not required.
      OBJECT: hrSWRunStatus
      SYNTAX: undef
      MIN_ACCESS: read-only
      DESCRIPTION: Write access is not required.
----------------------------------- Final de segmento -----------------------------------
----------------------------------- ifCompliance3 ---------------------------
ifCompliance3:
  ARCHIVO: IF-MIB.mib
  OID:  ifCompliances 3 
  DESCRIPTION: The compliance statement for SNMP entities which have
network interfaces.
  TYPE: MODULE-COMPLIANCE
  STATUS: current
  MODULE:
    GROUPS:
      GROUP: ifFixedLengthGroup
      DESCRIPTION: This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second.
      GROUP: ifHCFixedLengthGroup
      DESCRIPTION: This group is mandatory for those network interfaces which
are character-oriented or transmit data in fixed-length
transmission units, and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second.
      GROUP: ifPacketGroup
      DESCRIPTION: This group is mandatory for those network interfaces which
are packet-oriented, and for which the value of the
corresponding instance of ifSpeed is less than or equal to
20,000,000 bits/second.
      GROUP: ifHCPacketGroup
      DESCRIPTION: This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than 20,000,000
bits/second but less than or equal to 650,000,000
bits/second.
      GROUP: ifVHCPacketGroup
      DESCRIPTION: This group is mandatory only for those network interfaces
which are packet-oriented and for which the value of the
corresponding instance of ifSpeed is greater than
650,000,000 bits/second.
      GROUP: ifCounterDiscontinuityGroup
      DESCRIPTION: This group is mandatory for those network interfaces that
are required to maintain counters (i.e., those for which one
of the ifFixedLengthGroup, ifHCFixedLengthGroup,
ifPacketGroup, ifHCPacketGroup, or ifVHCPacketGroup is
mandatory).
      GROUP: ifRcvAddressGroup
      DESCRIPTION: The applicability of this group MUST be defined by the
media-specific MIBs.  Media-specific MIBs must define the
exact meaning, use, and semantics of the addresses in this
group.
    OBJECTS:
      OBJECT: ifLinkUpDownTrapEnable
      SYNTAX: undef
      MIN_ACCESS: read-only
      DESCRIPTION: Write access is not required.
      OBJECT: ifPromiscuousMode
      SYNTAX: undef
      MIN_ACCESS: read-only
      DESCRIPTION: Write access is not required.
      OBJECT: ifAlias
      SYNTAX: undef
      MIN_ACCESS: read-only
      DESCRIPTION: Write access is not required.
----------------------------------- Final de segmento -----------------------------------
